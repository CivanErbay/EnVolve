{"version":3,"sources":["utils/jwt-utils.js","components/Header.jsx","components/BasicButton.jsx","utils/auth-utils.js","components/About.jsx","components/RegisterButton.jsx","pages/Login.jsx","actions/index.js","utils/fetch-utils.js","components/wrapper/WhiteWrapper.jsx","pages/Register.jsx","components/LoadingSpinner.jsx","components/PrivateRoute.jsx","components/SchoolClasses.jsx","components/wrapper/DiagonalWrapper.jsx","pages/Overview.jsx","components/BackButton.jsx","pages/SchoolClassCreation.jsx","components/StudentList.jsx","utils/survey-fetch-utils.js","utils/calculations/dashboard-calc.js","components/Dashboard.jsx","components/wrapper/StepWrapper.jsx","pages/SingleClass.jsx","components/Footer.jsx","pages/Landing.jsx","components/SimplePopover.jsx","components/SimplePopoverWhite.jsx","pages/SurveyCreation.jsx","components/ProgressBar.jsx","pages/SurveyAnswer.jsx","components/wrapper/Diagonal2Wrapper.jsx","components/ThankYou.jsx","components/NoSurvey.jsx","components/Navigation.jsx","App.js","serviceWorker.js","reducers/UserReducer.jsx","reducers/SchoolClassReducer.jsx","reducers/index.js","index.js"],"names":["jwtDecode","require","key","getJWTToken","localStorage","getItem","removeJWTToken","removeItem","setJWTToken","token","setItem","getDecodedJWTToken","jwtToken","useStyles","makeStyles","theme","link","textDecoration","color","image","width","maxWidth","Header","classes","Box","px","className","to","src","alt","buttonStyle","textTransform","background","fontWeight","BasicButton","disabled","content","onClick","style","Button","classNames","variant","baseURL","process","REACT_APP_BASE_URL","username","password","a","fetch","method","headers","body","JSON","stringify","response","status","Error","statusText","text","about","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","minHeight","display","flexDirection","alignItems","aboutSmall","headline","fontSize","textTypo","textAlign","padding","lineHeight","About","matches","useMediaQuery","pb","Typography","py","m","boxShadow","backgroundColor","borderRadius","height","letterSpacing","RegisterButton","mt","p","centerPage","justifyContent","center","loginBox","borderWidth","Login","useState","setUsername","setPassword","dispatch","useDispatch","authStatus","useSelector","state","loggedUser","location","useLocation","locationState","from","pathname","TextField","onChange","event","target","value","id","label","autoComplete","type","pt","performLogin","then","userData","payload","catch","e","postClass","schoolClass","Authorization","teacher","json","getClassById","deleteClassById","newFont","fontFamily","wrapper","WhiteWrapper","children","backImg","outer","inner","Register","React","anchorEl","setAnchorEl","open","Boolean","undefined","confirmpassword","firstname","lastname","email","registerState","setRegisterState","handleChange","name","margin","registerData","preventDefault","currentTarget","length","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","typography","root","ProgressSpinner","CircularProgress","PrivateRoute","Component","component","rest","useEffect","Date","getTime","exp","render","props","boxStyle","border","details","cNames","marginTop","SchoolClasses","schoolClasses","setSchoolClasses","sub","getSchoolClassesByTeacher","map","classname","classmembers","counter","i","activeStatus","checkFinishedStudents","DiagonalWrapper","list","fullList","centerRow","cursor","Overview","history","useHistory","routeCreateClass","push","userState","logout","anchor","bottom","swipe","setSwipe","toggleDrawer","Fragment","SwipeableDrawer","onOpen","clsx","role","onKeyDown","List","marginLeft","BackButton","column","SchoolClassCreation","singleStudent","setSingleStudent","studentlist","setStudentlist","cname","setCName","creationSuccess","setCreationSuccess","setSchoolClass","postResult","placeholder","required","concat","studentBox","StudentList","Grid","container","member","item","xs","student","marginRight","data-clipboard-text","code","postNewSurvey","survey","studentCode","schoolClassId","clearSurveyByClassId","average","array","sum","lastWeekResponseCalculator","tempResponses","j","questionList","finalResponses","v","allWeekResponseCalculator","week","responses","reduce","curr","acc","graphHeadlineMobile","graphHeadlineDesktop","Dashboard","allSurveyAnswers","setAllSurveyAnswers","resultByWeek","setResultByWeek","lastWeekResult","setLastWeekResult","prevLastWeekResult","setPrevLastWeekResult","keywordList","setKeywordList","data1","data2","data3","data","setData","keyword","index","subject","A","keywordListShortCapitalize","keywordShort","toUpperCase","lastWeek","currentWeek","singleWeekResult","uv","pv","amt","getSurveyAnswerListByClassId","singleResponse","localDate","weekResults","console","log","filter","result","tempKeywordList","singleQuestion","keyWord","fiveWeekResponses","cx","cy","outerRadius","dataKey","domain","stroke","fill","fillOpacity","ml","top","right","left","strokeDasharray","x1","y1","x2","y2","stopColor","stopOpacity","wrapperMobile","wrapperDesktop","StepWrapper","flexGrow","cName","dialogDesktop","dialogMobile","buttonText","SingleClass","showStudents","setShowStudents","useParams","redirectTrigger","setRedirectTrigger","setOpen","routeCreateSurvey","path","handleClickOpen","showStudentList","hideStudentList","redirectOverview","deleteClass","deleteBool","clearSurvey","clearBool","mb","Dialog","keepMounted","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","stickToBottom","position","footerProps","Footer","codeBox","Landing","setStudentCode","spacing","SimplePopover","popoverContent","SimplePopoverWhite","headlinetwo","SurveyCreation","questionText","setSingleQuestion","setQuestionList","setSurvey","postSingleSurvey","md","ListItem","ListItemAvatar","Avatar","ListItemText","primary","ListItemSecondaryAction","IconButton","edge","aria-label","mr","LinearProgressWithLabel","LinearProgress","minWidth","Math","round","LinearWithValueLabel","progressVal","qHeadline","q","SurveyAnswer","currentSurvey","setCurrentSurvey","questionState","setQuestionState","responseList","setResponseList","userResponse","setUserResponse","getSurveyForStudent","fetchResponse","routeNoSurvey","routeThankYou","postAnswer","collectedAnswers","marks","my","Slider","min","max","valueLabelFormat","findIndex","mark","getAriaValueText","step","valueLabelDisplay","gutterBottom","finalResponseList","DiagonalWrapper2","ThankYou","NoSurvey","Navigation","decodedToken","isJWTTokenValid","exact","createMuiTheme","palette","main","secondary","join","App","window","hostname","match","initialState","fetchStatus","allReducers","combineReducers","action","schoolClassesData","responseData","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.e1744f27.chunk.js","sourcesContent":["const jwtDecode = require('jwt-decode');\r\n\r\nconst key = 'teacher-token';\r\n\r\nexport function getJWTToken() {\r\n    return localStorage.getItem(key);\r\n}\r\n\r\nexport function removeJWTToken() {\r\n    return localStorage.removeItem(key);\r\n}\r\n\r\nexport function setJWTToken(token) {\r\n    return localStorage.setItem(key, token);\r\n}\r\n\r\nexport function isJWTTokenValid() {\r\n    const jwtToken = getJWTToken();\r\n    if (!jwtToken) {\r\n        return false;\r\n    }\r\n    const decodedToken = getDecodedJWTToken();\r\n    return new Date().getTime() / 1000 < decodedToken.exp;\r\n}\r\n\r\nexport function getDecodedJWTToken() {\r\n    const jwtToken = getJWTToken();\r\n    return jwtDecode(jwtToken);\r\n\r\n}\r\n","import {Link} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    link: {\r\n        textDecoration: 'none',\r\n        color: 'black',\r\n    },\r\n    image: {\r\n        width: \"100%\",\r\n        maxWidth: \"550px\"\r\n    },\r\n\r\n\r\n}))\r\n\r\nexport default function Header() {\r\n\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Box px={2}>\r\n            <div><Link className={classes.link} to=\"/\">\r\n                <img className={classes.image} src=\"/images/logo.svg\" alt=\"\"/>\r\n            </Link></div>\r\n\r\n        </Box>\r\n    )\r\n}","import React from 'react'\r\nimport Button from \"@material-ui/core/Button\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport classNames from 'classnames';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    buttonStyle : {\r\n        textTransform: 'none',\r\n        background: \"rgba(57,164,209)\",\r\n        color: \"white\",\r\n        fontWeight: \"bold\"\r\n    }\r\n}))\r\n\r\n\r\nexport default function BasicButton({className, disabled, content, onClick, style}) {\r\n\r\n    const classes = useStyles();\r\n    return(\r\n            <Button className={classNames(classes.buttonStyle, className)} disabled={disabled} onClick={onClick} style={style} variant=\"contained\">{content}</Button>\r\n    )\r\n}","const baseURL = process.env.REACT_APP_BASE_URL\r\nexport async function performLogin(username, password) {\r\n\r\n    const response = await fetch(`${baseURL}/auth/login`, { //maybe without auth\r\n\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ username, password }),\r\n    })\r\n\r\n    if (response.status !== 200) {\r\n        throw new Error(`failed to login: ${response.statusText}`);\r\n    }\r\n\r\n    return await response.text();\r\n}\r\n\r\n","import {Box, useMediaQuery} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    about: {\r\n        backgroundImage: `url(${\"./images/greenback3.svg\"})`,\r\n        backgroundSize: \"cover\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"center\",\r\n        minHeight: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    aboutSmall: {\r\n        minHeight: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    headline: {\r\n        fontSize: \"4.5em\",\r\n        color: \"#F7F7F7\"\r\n\r\n    },\r\n    textTypo: {\r\n        textAlign: \"left\",\r\n        padding: \"1em\",\r\n        fontSize:\"1rem\",\r\n        lineHeight:\"1.75\",\r\n      /*  background: \"rgba(247, 247, 247, .7)\"*/\r\n    }\r\n}))\r\n\r\nexport const About = () => {\r\n\r\n    const classes = useStyles();\r\n    const matches = useMediaQuery('(min-width:600px)');\r\n\r\n    return (\r\n\r\n        <><Box pb={2}  className={ matches ? classes.aboutSmall : classes.about} >\r\n\r\n                <Typography className={classes.headline}>About</Typography>\r\n\r\n                <Box px={3} py={4} m={5} boxShadow={3} style={{maxWidth: \"600px\", backgroundColor: \"#F7F7F7\", borderRadius: \"10px\"}}>\r\n                    <img style={{height: \"25vh\"}} src=\"./images/twoPersons.png\" alt=\"\"/>\r\n                    <Typography className={classes.textTypo}><span style={{letterSpacing: \"-2.25px\", fontSize:\"1.5em\", lineHeight:\".75\", fontWeight: \"bold\"}}>Envolve </span> is an app to <b>improve communication between students and their teachers </b>.\r\n                        <br /> The approach is to\r\n                        establish a <b>continuous student-side feedback loop</b> to allow students to share their interests, ideas,\r\n                        wishes, criticisms and so on.\r\n                        <br />\r\n                        Based on this information, the teacher can <b> design lessons in the interest\r\n                            of the students </b>, thereby increasing their motivation to learn and ultimately improving the quality of\r\n                        learning.</Typography>\r\n                </Box>\r\n\r\n            </Box>\r\n            </>\r\n\r\n\r\n    )\r\n\r\n}","import Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {Link} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    buttonStyle : {\r\n        textTransform: 'none',\r\n        background: \"rgba(57,164,209)\",\r\n        color: \"white\",\r\n        fontWeight: \"bold\",\r\n        borderRadius: \"5px\"\r\n    },\r\n    link: {\r\n        textTransform: \"none\",\r\n        textDecoration: 'none',\r\n        color: \"white\",\r\n\r\n    }\r\n}))\r\n\r\n\r\nexport const RegisterButton = () => {\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Box>\r\n            <Typography color={\"secondary\"} style={{fontWeight: \"bold\"}}>Not yet registered?</Typography>\r\n            <Box mt={2} boxShadow={2} p={1} className={classes.buttonStyle}>\r\n                <Link className={classes.link} to=\"/register\">Create Account</Link>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}","import React, { useState} from 'react'\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport BasicButton from \"../components/BasicButton\";\r\nimport {getDecodedJWTToken, setJWTToken} from \"../utils/jwt-utils\";\r\nimport {performLogin} from \"../utils/auth-utils\";\r\nimport {Redirect, useLocation} from \"react-router-dom\";\r\nimport {About} from \"../components/About\";\r\nimport {RegisterButton} from \"../components/RegisterButton\";\r\nimport {LOGIN, LOGIN_FAILED, LOGIN_SUCCESS} from \"../actions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    centerPage: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        height: '70vh'\r\n    },\r\n    center: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    loginBox: {\r\n        padding: \"1.5em\",\r\n        borderRadius: \"5px\",\r\n        borderWidth: \"1px\",\r\n        width: \"250px\",\r\n        background: \"#F7F7F7\"\r\n    },\r\n\r\n}))\r\n\r\n\r\nexport default function Login() {\r\n\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n/*    const [errorInfo, setErrorInfo] = useState(\"\")*/\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    function login() {\r\n        dispatch({ type: LOGIN });\r\n        performLogin(username, password)\r\n            .then((response) => {\r\n                setJWTToken(response);\r\n                const userData = getDecodedJWTToken();\r\n                dispatch({type: LOGIN_SUCCESS, payload: userData });\r\n            })\r\n            .catch((e) => {\r\n                dispatch({ type: LOGIN_FAILED });\r\n            })\r\n    }\r\n\r\n    const  {authStatus } = useSelector(state => state.loggedUser);\r\n\r\n\r\n    const location = useLocation();\r\n\r\n    if (authStatus === 'SUCCESS') {\r\n        let locationState = location.state || {from:{pathname: \"/overview\"}}\r\n        return <Redirect to={locationState.from.pathname} />;\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <Box mt={5} className={classes.centerPage}>\r\n            <Box boxShadow={2} className={classes.loginBox}>\r\n            <form className={classes.center}>\r\n                <Typography style={{fontWeight: \"bold\", fontSize: \"1.5em\"}}>Teacher Login</Typography>\r\n                <TextField onChange={(event) => setUsername(event.target.value)} id=\"standard-basic1\" label=\"Username\" value={username} autoComplete=\"on\"/>\r\n                <TextField onChange={(event) => setPassword(event.target.value)} id=\"standard-basic2\" type=\"password\" label=\"Password\" value={password} autoComplete=\"on\"/>\r\n                <Box pt={2}>\r\n                    <BasicButton onClick={login} content={\"Login\"}/>\r\n                </Box>\r\n            </form>\r\n            </Box>\r\n            <RegisterButton/>\r\n        </Box>\r\n            <img style={{height: \"5vh\", padding: \"0.5em\"}} src=\"./images/arrowDown.svg\" alt=\"\"/>\r\n        <About/>\r\n        </>\r\n\r\n    )\r\n}","export const LOGIN = 'LOGIN';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILED = 'LOGIN_FAILED';\r\nexport const LOGOUT = 'LOGOUT';\r\n\r\nexport const FETCH_CLASSES_REQUEST = 'FETCH_CLASSES_REQUEST';\r\nexport const FETCH_CLASSES_SUCCESS = 'FETCH_CLASSES_SUCCESS';\r\nexport const FETCH_CLASSES_FAILURE = 'FETCH_CLASSES_FAILURE';\r\n","import {getJWTToken} from \"./jwt-utils\";\r\nconst baseURL = process.env.REACT_APP_BASE_URL\r\n\r\nexport function postRegister(registerData) {\r\n    return fetch(`${baseURL}/auth/register`, { //maybe without auth\r\n        method: 'POST',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(registerData),\r\n    }).then((response) => {\r\n        if (response.status !== 200) {\r\n            throw new Error('invalid response')\r\n        }\r\n        return response.text(); //necessary to handle token in the Browser, which comes with the Fetch from the backend\r\n    })\r\n}\r\n\r\nexport function postClass(schoolClass) {\r\n    const token = getJWTToken();\r\n    return fetch(`${baseURL}/api/classes`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(schoolClass)\r\n    }).then(() => {\r\n            return true;\r\n        }\r\n    ).catch(() => {\r\n            return false;\r\n        }\r\n    )\r\n}\r\n\r\nexport async function getSchoolClassesByTeacher(teacher) {\r\n    const token = getJWTToken();\r\n    const response = await fetch(`${baseURL}/api/classes/${teacher}`, {\r\n        method: 'GET',\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    if (response.status !== 200) {\r\n        throw new Error('something went wrong!!!');\r\n    }\r\n    return await response.json();\r\n}\r\n\r\nexport async function getClassById(id) {\r\n    const token = getJWTToken();\r\n    const response = await fetch(`${baseURL}/api/classes/class/${id}`, {\r\n        method: 'GET',\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    if (response.status !== 200) {\r\n        throw new Error('something went wrong?');\r\n    }\r\n    return await response.json();\r\n}\r\n\r\nexport function deleteClassById(id) {\r\n    const token = getJWTToken();\r\n    return fetch(`${baseURL}/api/classes/class/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    }).then(() => {\r\n        return true\r\n    }).catch(() => {\r\n        return false\r\n    })\r\n\r\n}","import Box from \"@material-ui/core/Box\";\r\nimport classNames from \"classnames\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    newFont : {\r\n        fontFamily: \"'Open Sans', sans-serif;\",\r\n        fontWeight: \"800\"\r\n    },\r\n    wrapper: {\r\n        backgroundColor: \"#F7F7F7\",\r\n        width: \"300px\",\r\n        maxWidth: \"800px\",\r\n        borderRadius: \"10px\"\r\n    },\r\n\r\n}));\r\n\r\n\r\nexport default function WhiteWrapper ({children, style}){\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    return (\r\n\r\n        <Box mt={4} p={3} style={style} boxShadow={2} className={classNames (classes.newFont, classes.wrapper, classes.backImg)}>\r\n\r\n            {children}\r\n        </Box>\r\n    )\r\n\r\n}","import {Box} from \"@material-ui/core\";\r\nimport React, { useState} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {postRegister} from \"../utils/fetch-utils\";\r\nimport BasicButton from \"../components/BasicButton\";\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {getDecodedJWTToken, setJWTToken} from \"../utils/jwt-utils\";\r\nimport WhiteWrapper from \"../components/wrapper/WhiteWrapper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {LOGIN_FAILED, LOGIN_SUCCESS} from \"../actions\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    outer: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        height: '50vh'\r\n    },\r\n    inner: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n        color: 'white',\r\n        textTransform: 'none'\r\n    }\r\n}));\r\n\r\nexport default function Register() {\r\n\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n\r\n    const [registerState, setRegisterState] = useState({\r\n        username: '',\r\n        password: '',\r\n        confirmpassword: '',\r\n        firstname: '',\r\n        lastname: '',\r\n        email: '',\r\n    })\r\n\r\n    function handleChange(event) {\r\n        const {name, value} = event.target;\r\n        setRegisterState({\r\n            ...registerState,\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        if (registerState.confirmpassword !== registerState.password) {\r\n            setAnchorEl(event.currentTarget);\r\n        } else {\r\n            postRegister(registerState)\r\n                .then((response) => {\r\n                    setJWTToken(response);\r\n                    const userData = getDecodedJWTToken();\r\n                    dispatch({type: LOGIN_SUCCESS, payload: userData});\r\n                })\r\n                .catch(() => {\r\n                    dispatch({type: LOGIN_FAILED});\r\n                });\r\n        }\r\n    }\r\n\r\n    const {authStatus} = useSelector(state => state.loggedUser)\r\n\r\n    if (authStatus === 'SUCCESS') {\r\n        return <Redirect to={'/overview'}/>;\r\n    }\r\n\r\n\r\n    return (\r\n        <Box className={classes.inner}>\r\n            <WhiteWrapper style={{padding: \"3em 2.25em 4em 2.25em\"}}>\r\n                <Box className={classes.outer}>\r\n                    <h2>Register</h2>\r\n                    <form>\r\n                        <Box className={classes.inner}>\r\n                            <TextField style={{width: \"320px\"}} onChange={handleChange} name=\"username\"\r\n                                       label=\"Username\"/>\r\n                            <Box>\r\n                                <TextField style={{width: \"150px\", margin: \"10px\"}} onChange={handleChange}\r\n                                           name=\"firstname\"\r\n                                           label=\"Name\"/>\r\n                                <TextField style={{width: \"150px\", margin: \"10px\"}} onChange={handleChange}\r\n                                           name=\"lastname\"\r\n                                           label=\"Lastname\"/>\r\n                            </Box>\r\n                            <TextField style={{width: \"320px\"}} name=\"email\" onChange={handleChange}\r\n                                       label=\"Email Address\"/>\r\n                            <TextField style={{width: \"320px\", margin: \"10px\"}} type=\"password\"\r\n                                       onChange={handleChange} name=\"password\" label=\"Password\"/>\r\n                            <TextField style={{width: \"320px\"}} onChange={handleChange} name=\"confirmpassword\"\r\n                                       type=\"password\" label=\"Confirm Password\"/>\r\n                            <Box mt={5}>\r\n                                <BasicButton onClick={handleSubmit}\r\n                                             disabled={registerState.username.length < 2 || registerState.firstname.length < 2 || registerState.lastname.length < 2 || registerState.password.length < 2 || registerState.email.length < 2\r\n                                             } content={\"Register\"}/>\r\n                                {registerState.confirmpassword !== registerState.password &&\r\n                                <Popover\r\n                                    id={id}\r\n                                    open={open}\r\n                                    anchorEl={anchorEl}\r\n                                    onClose={handleClose}\r\n                                    anchorOrigin={{\r\n                                        vertical: 'bottom',\r\n                                        horizontal: 'center',\r\n                                    }}\r\n                                    transformOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'center',\r\n                                    }}\r\n                                >\r\n                                    <Typography className={classes.typography}>Passwords not matching</Typography>\r\n                                </Popover>}\r\n                            </Box>\r\n                        </Box>\r\n                    </form>\r\n                </Box>\r\n            </WhiteWrapper>\r\n            <Box pt={6} pb={2}>\r\n                <Button><\r\n                    Link className={classes.link} to=\"/login\">Back</Link>\r\n                </Button>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}","\r\nimport React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n}));\r\n\r\nexport default function ProgressSpinner() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CircularProgress/>\r\n        </div>\r\n    );\r\n}","import React, { useEffect} from \"react\";\r\n\r\nimport {removeJWTToken} from \"../utils/jwt-utils\";\r\n\r\nimport {Redirect, Route} from \"react-router-dom\";\r\nimport LoadingSpinner from \"./LoadingSpinner\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {LOGOUT} from \"../actions\";\r\n\r\n\r\nexport default function PrivateRoute({component: Component, ...rest}) {\r\n\r\n\r\n    const {authStatus, userData} = useSelector(state => state.loggedUser)\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    //Each private Route is just accessible by authenticated Users\r\n\r\n    useEffect(() => {\r\n        if (\r\n            authStatus === 'SUCCESS' &&\r\n            new Date().getTime() / 1000 >= userData.exp\r\n        ) {\r\n            removeJWTToken();   //Take these two lines for the logout\r\n            dispatch({type: LOGOUT});\r\n        }\r\n    });\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => {\r\n                if (authStatus === 'FAILED' || !authStatus) {\r\n                    return <Redirect to={{pathname:'/login', state: {from: props.location}}}/>\r\n                }\r\n                if (authStatus === 'SUCCESS') {\r\n\r\n                    if (new Date().getTime() / 1000 >= userData.exp) {\r\n                        return <Redirect to={{pathname:'/login', state: {from: props.location}}}/>\r\n                    }\r\n                    return <Component {...props} />\r\n                }\r\n                return <LoadingSpinner/>\r\n\r\n            }}\r\n        />\r\n    )\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {getSchoolClassesByTeacher} from \"../utils/fetch-utils\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport classNames from 'classnames';\r\nimport {Link} from \"react-router-dom\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {FETCH_CLASSES_FAILURE, FETCH_CLASSES_REQUEST, FETCH_CLASSES_SUCCESS} from \"../actions\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    link: {\r\n        textDecoration: 'none',\r\n        color: 'black',\r\n        textTransform: 'none',\r\n        fontSize: '10px',\r\n        padding: \"0.4em\",\r\n        display: \"flex\",\r\n        width: \"90%\",\r\n        justifyContent: \"space-around\",\r\n        alignItems: \"center\"\r\n    },\r\n    center: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\"\r\n    },\r\n    boxStyle: {\r\n        width: \"80%\",\r\n        height: \"80px\",\r\n        borderRadius: \"10px\",\r\n        background: 'linear-gradient(to right top, #0071A0, #39A4D1)', border: \"solid\", borderWidth: \"5px\"\r\n    },\r\n    details: {\r\n        color: \"white\",\r\n        fontSize: \"10px\"\r\n    },\r\n    cNames: {\r\n        color: \"white\",\r\n        fontSize: \"45px\",\r\n        marginTop: \"10px\"\r\n    },\r\n\r\n}));\r\n\r\n\r\nexport default function SchoolClasses() {\r\n\r\n    const [schoolClasses, setSchoolClasses] = useState([]);\r\n    const classes = useStyles();\r\n    //get the actual logged in userContext\r\n    const userState = useSelector(state => state.loggedUser);\r\n    //get the teacher out of the context\r\n    const teacher = userState.userData.sub\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    //get classes out of this teacher\r\n    useEffect(() => {\r\n        dispatch({type: FETCH_CLASSES_REQUEST})\r\n        getSchoolClassesByTeacher(teacher).then(response => {\r\n            setSchoolClasses(response)\r\n            dispatch({type: FETCH_CLASSES_SUCCESS, payload: response})\r\n        }).catch((e) => {\r\n            dispatch({type: FETCH_CLASSES_FAILURE})\r\n        });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    const checkFinishedStudents = (classmembers) => {\r\n        let counter = 0;\r\n        for (let i = 0; i < classmembers.length; i++) {\r\n            if (!classmembers[i].activeStatus) {\r\n                counter++\r\n            }\r\n        }\r\n        return counter\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Box mt={2} key={schoolClasses.id} className={classes.center}>{schoolClasses.map((schoolClass) =>\r\n                <Box mt={2} className={classNames(classes.boxStyle, classes.center)} boxShadow={6}\r\n                     key={schoolClass.id} m={1}>\r\n                    <Link\r\n                    className={classNames(classes.link, classes.details)}\r\n                    to={`/singleclass/${schoolClass.id}`}\r\n                    key={schoolClasses.id}>\r\n                    <Typography style={{fontWeight: \"700\"}} className={classes.cNames}>\r\n                        {schoolClass.classname}\r\n                     </Typography>\r\n                    <Box style={{display: \"flex\", flexDirection: \"column\"}}>\r\n                    <Typography style={{lineHeight: \"1.1\", fontWeight: \"700\"}}>\r\n                        {checkFinishedStudents(schoolClass.classmembers)} / {schoolClass.classmembers.length}\r\n                    </Typography>\r\n                        <Typography style={{lineHeight: \"1.1\"}}>\r\n                       curr. Survey\r\n                    </Typography>\r\n                    </Box>\r\n                </Link>\r\n                </Box>\r\n            )}</Box>\r\n\r\n\r\n        </>\r\n    )\r\n}","import Box from \"@material-ui/core/Box\";\r\nimport classNames from \"classnames\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backImg: {\r\n        background: `url(${\"./images/diagonalNew.svg\"})`,\r\n        backgroundSize: \"cover\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"center\",\r\n        height: \"100%\",\r\n    },\r\n    newFont : {\r\n        fontFamily: \"'Open Sans', sans-serif;\",\r\n        fontWeight: \"800\"\r\n    },\r\n    wrapper: {\r\n        backgroundColor: \"#F7F7F7\",\r\n        width: \"300px\",\r\n        maxWidth: \"800px\",\r\n        borderRadius: \"10px\"\r\n    },\r\n}));\r\n\r\n\r\nexport default function DiagonalWrapper ({children, style}){\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    return (\r\n\r\n        <Box mt={4} p={3} style={style} boxShadow={2} className={classNames (classes.newFont, classes.wrapper, classes.backImg)}>\r\n\r\n            {children}\r\n        </Box>\r\n    )\r\n\r\n}","import React from \"react\";\r\nimport SchoolClasses from \"../components/SchoolClasses\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport clsx from \"clsx\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport { useHistory} from \"react-router-dom\";\r\nimport {removeJWTToken} from \"../utils/jwt-utils\";\r\nimport DiagonalWrapper from \"../components/wrapper/DiagonalWrapper\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {LOGOUT} from \"../actions\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    center: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    list: {\r\n        width: 250,\r\n    },\r\n    fullList: {\r\n        width: 'auto',\r\n    },\r\n    centerRow: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-start\",\r\n        alignItems: \"center\",\r\n        border: \"solid\",\r\n        padding: \"1em\",\r\n        borderRadius: \"15px\",\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"#F7F7F7\"\r\n    },\r\n}));\r\n\r\n\r\nexport default function Overview() {\r\n\r\n    //For Redirect to /create\r\n    const history = useHistory();\r\n    const routeCreateClass = () =>{\r\n        let path = `/creation`;\r\n        history.push(path);\r\n    }\r\n\r\n\r\n\r\n    //For Logout\r\n\r\n    const dispatch = useDispatch();\r\n    const userState = useSelector(state => state.loggedUser)\r\n\r\n    function logout() {         //Logout-Methopd\r\n        removeJWTToken()        //Remove Token from localStorage\r\n        dispatch({type: LOGOUT})    //Trigger Logout by setting authStatus:undefined in the context\r\n    }\r\n\r\n    //For Drawer\r\n    const [swipe, setSwipe] = React.useState({\r\n        bottom: false,\r\n    });\r\n    const toggleDrawer = (anchor, open) => (event) => {\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n\r\n        setSwipe({ ...swipe, [anchor]: open });\r\n    };\r\n\r\n    const list = (anchor) => (\r\n        <div\r\n            className={clsx(classes.list, {\r\n                [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n            })}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(anchor, false)}\r\n            onKeyDown={toggleDrawer(anchor, false)}\r\n        >\r\n            <List>\r\n                <Box boxShadow={3} mt={2} className={classes.centerRow} onClick={routeCreateClass}>\r\n                    <img src=\"../images/plus.svg\" alt=\"\" style={{height: \"4vh\"}}/>\r\n                    <Typography style={{marginLeft: \"5px\"}}>Create Class</Typography>\r\n                </Box>\r\n                <Box boxShadow={3} mt={2} className={classes.centerRow} onClick={logout} >\r\n                    <img src=\"../images/logout.svg\" alt=\"\" style={{height: \"4vh\"}}/>\r\n                    <Typography style={{marginLeft: \"5px\"}}>Logout</Typography>\r\n                </Box>\r\n\r\n\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    return (\r\n        <Box className={classes.center}>\r\n\r\n            <DiagonalWrapper>\r\n                <h1>Hello {userState.userData.firstname}!</h1>\r\n                <h4>Check your latest survey results</h4>\r\n                <SchoolClasses/>\r\n            </DiagonalWrapper>\r\n\r\n            <div> {/*Swipe able Drawer*/}\r\n                <React.Fragment key={\"bottom\"}>\r\n                    <Box m={5} onClick={toggleDrawer(\"bottom\", true)} ><img style={{height: \"8vh\"}}  src=\"./images/menu.svg\" alt=\"\"/></Box>\r\n                    <SwipeableDrawer\r\n                        anchor={\"bottom\"}\r\n                        open={swipe[\"bottom\"]}\r\n                        onClose={toggleDrawer(\"bottom\", false)}\r\n                        onOpen={toggleDrawer(\"bottom\", true)}\r\n                    >\r\n                        {list(\"bottom\")}\r\n                    </SwipeableDrawer>\r\n                </React.Fragment>\r\n\r\n            </div>\r\n\r\n        </Box>\r\n    )\r\n}","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    link: {\r\n        textDecoration: 'none',\r\n        color: 'white',\r\n        textTransform: 'none'\r\n    }\r\n}));\r\n\r\nexport default function BackButton() {\r\n    const classes = useStyles();\r\n    return (\r\n\r\n        <Box pt={6} pb={2}>\r\n        <Button><\r\n            Link className={ classes.link} to=\"/overview\">Back</Link>\r\n        </Button>\r\n        </Box>\r\n    )\r\n}","import React, { useEffect, useState} from 'react'\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport BasicButton from \"../components/BasicButton\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {postClass} from \"../utils/fetch-utils\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport BackButton from \"../components/BackButton\";\r\nimport WhiteWrapper from \"../components/wrapper/WhiteWrapper\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {useMediaQuery} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    column: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    }\r\n}));\r\n\r\nexport default function SchoolClassCreation() {\r\n    const classes = useStyles();\r\n\r\n\r\n    const [singleStudent, setSingleStudent] = useState(\"\")\r\n    const [studentlist, setStudentlist] = useState([])\r\n    const [cname, setCName] = useState(\"\")\r\n    const [creationSuccess, setCreationSuccess] = useState(false)\r\n    const [schoolClass, setSchoolClass] = useState({\r\n        classname: '',\r\n        classmembers: []\r\n    })\r\n    const matches = useMediaQuery('(min-width:800px)');\r\n\r\n    function isDisabled(){\r\n        return !(schoolClass.classname.length >= 2 || schoolClass.classmembers.length >= 5);\r\n    }\r\n\r\n    function addStudent() {\r\n        setStudentlist(studentlist.concat(singleStudent))\r\n        setSingleStudent(\"\")\r\n    }\r\n\r\n\r\n    useEffect(() =>{\r\n        setSchoolClass({...schoolClass, classmembers: studentlist})\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[studentlist])\r\n\r\n    async function handleSubmit() {\r\n        const postResult = await postClass({...schoolClass, classname: cname});\r\n        setCreationSuccess(postResult);\r\n    }\r\n\r\n    if (creationSuccess) {\r\n        return (\r\n            <Redirect to={\"/overview\"} />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Box mt={3} className={classes.column}>\r\n            <WhiteWrapper>\r\n            <h4>Classname</h4>\r\n            <TextField placeholder=\"Enter Classname\" onChange={(event) => setCName(event.target.value)} value={cname} required/>\r\n\r\n            <Box m={2}>{schoolClass.classmembers.map(singleStudent => <Typography key={singleStudent}>{singleStudent}</Typography>)}</Box>\r\n\r\n            <Box mt={4}>\r\n            <h4>Students</h4>\r\n            <TextField onChange={(event) => setSingleStudent(event.target.value)} value={singleStudent}/>\r\n            </Box>\r\n            <Box mt={2}>\r\n                <BasicButton onClick={addStudent} content={\"Add new Student\"}/>\r\n            </Box>\r\n            <Box mt={4}>\r\n\r\n            <BasicButton disabled={isDisabled()} onClick={handleSubmit} content={\"Create\"}/>\r\n            </Box>\r\n            </WhiteWrapper>\r\n\r\n            <Box mt={matches ? 20 : 0}>\r\n            <BackButton/>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}","import {Box} from \"@material-ui/core\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {getClassById} from \"../utils/fetch-utils\";\r\nimport WhiteWrapper from \"./wrapper/WhiteWrapper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Clipboard from 'react-clipboard.js';\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    center: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        width: \"100%\"\r\n    },\r\n    studentBox: {\r\n        margin: \"10px\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        padding: \"1.1em\",\r\n        width: \"100%\",\r\n        borderRadius: \"10px\",\r\n        color: \"#F7F7F7\",\r\n        backgroundColor: \"#272635\"\r\n    }\r\n\r\n}));\r\n\r\n\r\nexport const StudentList = ({id}) => {\r\n    const classes = useStyles();\r\n    const [schoolClass, setSchoolClass] = useState(null)\r\n\r\n\r\n    useEffect(() => {\r\n        getClassById(id).then(response => {\r\n            setSchoolClass(response)\r\n        });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n\r\n\r\n        <>\r\n\r\n            {schoolClass && (<WhiteWrapper>\r\n                <Grid container className={classes.center}>\r\n                    {schoolClass.classmembers.map((member) =>\r\n\r\n                        <Box boxShadow={3} className={classes.studentBox}>\r\n                            <Grid item xs={12}>\r\n                                <Typography style={{textAlign: \"left\", fontSize: \"1.3em\", fontWeight: \"700\"}}\r\n                                            key={member.student}> {member.student}  </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                {member.activeStatus ?\r\n                                    <Box style={{\r\n                                        display: \"flex\",\r\n                                        alignItems: \"center\",\r\n                                        justifyContent: \"center\",\r\n                                        width: \"100%\"\r\n                                    }}>\r\n                                        <Clipboard\r\n                                        style={{backgroundColor: \"#272635\", borderRadius: \"15px\", marginRight: \"10px\"}}\r\n                                        data-clipboard-text={member.code}>\r\n                                        <img style={{height: \"4vh\", marginTop: \"5px\"}} src=\"/images/copy.svg\" alt=\"\"/>\r\n\r\n                                    </Clipboard><span><b>{member.code}</b></span> </Box> :\r\n                                    <img style={{height: \"4vh\", marginTop: \"5px\"}} src=\"/images/tick.svg\"\r\n                                         alt=\"\"/>}\r\n                            </Grid>\r\n                        </Box>\r\n                    )}     </Grid>\r\n                <Typography><b>Note</b>: The green check mark indicates that the student has already\r\n                    participated.</Typography>\r\n            </WhiteWrapper>)\r\n            }\r\n\r\n        </>\r\n\r\n    )\r\n}","import {getJWTToken} from \"./jwt-utils\";\r\n\r\n/*const baseURL = \"https://envolve-feedback.herokuapp.com\"*/\r\nconst baseURL = process.env.REACT_APP_BASE_URL\r\n\r\nexport function postNewSurvey(survey) {\r\n    const token = getJWTToken();\r\n    return fetch( `${baseURL}/api/survey`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(survey)\r\n    }).then(() => {\r\n            return true;\r\n        }\r\n    ).catch(() => {\r\n            return false;\r\n        }\r\n    )\r\n}\r\n\r\nexport async function getSurveyForStudent(studentCode) {\r\n/*    const token = getJWTToken();*/\r\n    const response = await fetch(`${baseURL}/api/survey/${studentCode}`, {\r\n        method: 'GET',\r\n      /*  headers: {\r\n            Authorization: `Bearer ${token}`,\r\n        },*/\r\n    })\r\n    if (response.status !== 200) {\r\n    return false\r\n    }\r\n    return await response.json();\r\n}\r\n\r\nexport function postSurveyAnswer(survey) {\r\n\r\n    //ACHTUNG das slash / vor api/... ist wichtig, damit der fetch funktioniert!\r\n    return fetch(`${baseURL}/api/survey/feedback`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': \"application/json\",\r\n        },\r\n        body: JSON.stringify(survey)\r\n    }).then(() => {\r\n            return true;\r\n        }\r\n    ).catch(() => {\r\n            return false;\r\n        }\r\n    )\r\n}\r\n\r\n\r\nexport async function getSurveyAnswerListByClassId(schoolClassId) {\r\n    const token = getJWTToken();\r\n    const response = await fetch(`${baseURL}/api/survey/feedback/all/${schoolClassId}`, {\r\n        method: 'GET',\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    })\r\n    if (response.status !== 200) {\r\n        throw new Error('something went wrong!!!');\r\n    }\r\n    return await response.json();\r\n\r\n\r\n}export async function clearSurveyByClassId(schoolClassId) {\r\n    const token = getJWTToken();\r\n    return fetch(`${baseURL}/api/survey/clear/${schoolClassId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            Authorization: `Bearer ${token}`,\r\n        },\r\n    }).then(() => {\r\n    return true\r\n    }).catch(() => {\r\n    return false\r\n    })\r\n\r\n}","export const average = (array) => {\r\n    let sum = 0;\r\n    for (let p = 0; p < array.length; p++) {\r\n        sum += array[p];\r\n    }\r\n    return sum / array.length\r\n}\r\n\r\n\r\nexport const lastWeekResponseCalculator = (student) => {\r\n\r\n    /*    let tempResponses = Array(student[0].questionList.length).fill([])*/\r\n    let tempResponses = [[], [], [], [], []]\r\n    for (let j = 0; j < student.length; j++) {\r\n        for (let i = 0; i < student[j].questionList.length; i++) {\r\n            tempResponses[i].push(student[j].questionList[i].response)\r\n        }\r\n    }\r\n\r\n    let finalResponses = []\r\n\r\n    for (let v = 0; v < tempResponses.length; v++) {\r\n        finalResponses.push(average(tempResponses[v]))\r\n    }\r\n    return finalResponses\r\n\r\n}\r\n\r\n\r\nexport const allWeekResponseCalculator = (week) => {\r\n    let responses = []\r\n\r\n    for (let i = 0; i < week.length; i++) {\r\n        for (let j = 0; j < week[i].questionList.length; j++) {\r\n            responses.push(week[i].questionList[j].response)\r\n        }\r\n    }\r\n    if (responses.length > 0) {\r\n        const sum = responses.reduce((curr, acc) => {\r\n            return curr + acc\r\n        })\r\n\r\n        return sum / responses.length\r\n    }\r\n    return null\r\n}","import Box from \"@material-ui/core/Box\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport RadarChart from \"recharts/lib/chart/RadarChart\";\r\nimport {\r\n    Area,\r\n    AreaChart,\r\n    Bar,\r\n    CartesianGrid,\r\n    Legend,\r\n    PolarAngleAxis,\r\n    PolarGrid,\r\n    Radar,\r\n    XAxis,\r\n    YAxis\r\n} from \"recharts\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport BarChart from \"recharts/lib/chart/BarChart\";\r\nimport {getSurveyAnswerListByClassId} from \"../utils/survey-fetch-utils\";\r\nimport PolarRadiusAxis from \"recharts/lib/polar/PolarRadiusAxis\";\r\nimport {allWeekResponseCalculator, lastWeekResponseCalculator} from \"../utils/calculations/dashboard-calc\";\r\nimport {useMediaQuery} from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    center: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        height: \"100%\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\"\r\n    },\r\n    graphHeadlineMobile: {\r\n        fontSize: \"2em\",\r\n        fontWeight: \"bold\",\r\n        padding: \"0.25em\",\r\n        textAlign: \"left\"\r\n    },\r\n    graphHeadlineDesktop: {\r\n        fontSize: \"3em\",\r\n        fontWeight: \"bold\",\r\n        padding: \"0.25em\",\r\n        textAlign: \"center\",\r\n\r\n    }\r\n\r\n}));\r\n\r\n\r\nexport const Dashboard = ({schoolClassId}) => {\r\n\r\n    const classes = useStyles();\r\n    const [allSurveyAnswers, setAllSurveyAnswers] = useState([]);\r\n    const [resultByWeek, setResultByWeek] = useState([])\r\n    const [lastWeekResult, setLastWeekResult] = useState([])\r\n    const [prevLastWeekResult, setPrevLastWeekResult] = useState([])\r\n    const [keywordList, setKeywordList] = useState([])\r\n    const [data, setData] = useState({data1: undefined, data2: undefined, data3: undefined})\r\n\r\n    useEffect(() => {\r\n        {\r\n            const data1 =\r\n                keywordList.map((keyword, index) => {\r\n                    return {subject: keyword, A: lastWeekResult[index]}\r\n                })\r\n\r\n\r\n            const keywordListShortCapitalize = []\r\n            keywordList.map(keyword => {\r\n               let keywordShort = '';\r\n                for(let i = 0; i < 4; i++) {\r\n                  keywordShort += keyword[i].toUpperCase();\r\n                }\r\n                keywordListShortCapitalize.push(keywordShort)\r\n            });\r\n\r\n            const data2 =\r\n                keywordListShortCapitalize.map((keyword, index) => {\r\n                  return {name: keyword, lastWeek: prevLastWeekResult[index], currentWeek: lastWeekResult[index] }\r\n                })\r\n\r\n            const data3 =\r\n                resultByWeek.map((singleWeekResult, index) => {\r\n                    return {name: `W${index + 1}`, uv: singleWeekResult, pv: 1.3, amt: 2.0}\r\n                })\r\n            ;\r\n            setData({data1, data2, data3})\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [keywordList])\r\n\r\n\r\n    //GET-FETCH\r\n    useEffect(() => {\r\n        getSurveyAnswerListByClassId(schoolClassId).then(response => {\r\n            setAllSurveyAnswers(response.map(singleResponse => {\r\n                return {\r\n                    ...singleResponse, localDate: new Date(singleResponse.localDate)\r\n                }\r\n            }));\r\n        })\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (allSurveyAnswers.length > 0) {\r\n            const weekResults = []\r\n            console.log(weekResults)\r\n\r\n            for (let i = 0; i < 5; i++) {\r\n                weekResults.push(allSurveyAnswers.filter(result => {\r\n                    return result.localDate.getTime() > new Date().getTime() - ((i + 1) * 7 * 24 * 60 * 60 * 1000) && result.localDate.getTime() < new Date().getTime() - (i * 7 * 24 * 60 * 60 * 1000)\r\n                }));\r\n            }\r\n\r\n            //Get Keywords out of Questions\r\n            const tempKeywordList = []\r\n                allSurveyAnswers[0].questionList.map(singleQuestion => {\r\n                    tempKeywordList.push(singleQuestion.keyWord)\r\n                })\r\n\r\n\r\n           /* allSurveyAnswers.map(singleSurveyAnswer => {\r\n                    singleSurveyAnswer.questionList.map(singleQuestion => {\r\n                      tempKeywordList.push(singleQuestion.keyWord)\r\n                    })\r\n            })*/\r\n            setKeywordList(tempKeywordList)\r\n            //First Table\r\n            setLastWeekResult(lastWeekResponseCalculator(weekResults[0]));\r\n            //Second Table\r\n            setPrevLastWeekResult(lastWeekResponseCalculator(weekResults[1]))\r\n            //Third Table\r\n            const fiveWeekResponses = []\r\n            for (let i = 0; i < weekResults.length; i++) {\r\n                fiveWeekResponses.push(allWeekResponseCalculator(weekResults[i]))\r\n            }\r\n            setResultByWeek(fiveWeekResponses)\r\n\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [allSurveyAnswers])\r\n\r\n    const matches = useMediaQuery('(min-width:800px)');\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Box mt={2} color={\"secondary\"} className={classes.center}>\r\n\r\n            {data.data1 &&\r\n            <>\r\n                <Box mt={-3}>\r\n                <Typography className={matches ? classes.graphHeadlineDesktop : classes.graphHeadlineMobile}>LAST\r\n                    WEEK</Typography>\r\n\r\n                    <RadarChart cx={matches ? 380 : 150} cy={ matches ? 220 : 110} outerRadius={matches ? 200 : 70} width={matches? 750: 300} height={matches? 450: 225} data={data.data1}>\r\n                        <PolarGrid/>\r\n                        <PolarAngleAxis dataKey=\"subject\"/>\r\n                        <PolarRadiusAxis domain={[0, 5]}/>\r\n                        <Radar name=\"Mike\" dataKey=\"A\" stroke=\"#8884d8\" fill=\"#D9EFF9\" fillOpacity={0.6}/>\r\n                    </RadarChart>\r\n                </Box>\r\n\r\n\r\n                <Box mt={6}>\r\n                    <Typography className={matches ? classes.graphHeadlineDesktop : classes.graphHeadlineMobile}>CHANGES</Typography>\r\n                    <Box mt={2} ml={-6}>\r\n                        <BarChart width={ matches ? 700 : 350} height={matches ? 475 : 300} data={data.data2}\r\n                                  margin={{top: 5, right: 1, left: 1, bottom: 5}}>\r\n                            <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                            <XAxis dataKey=\"name\"/>\r\n                            <YAxis domain={[0, 5]}/>\r\n                            <Legend/>\r\n                            <Bar dataKey=\"lastWeek\" fill=\"#39A4D1\"/>\r\n                            <Bar dataKey=\"currentWeek\" fill=\"#82ca9d\"/>\r\n                        </BarChart>\r\n                    </Box>\r\n                </Box>\r\n\r\n                <Box mt={matches ? 8 : 6}>\r\n                    <Typography className={matches ? classes.graphHeadlineDesktop : classes.graphHeadlineMobile}>OVERALL</Typography>\r\n                    <Box mt={2} ml={-4}>\r\n                        <AreaChart\r\n                            width={matches ? 700: 350}\r\n                            height={matches ? 475 : 300}\r\n                            data={data.data3}\r\n                            margin={{top: 10, right: 30, left: 0, bottom: 0}}\r\n                        >\r\n                            <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                            <XAxis dataKey=\"name\"/>\r\n                            <YAxis domain={[0, 5]}/>\r\n\r\n                            <defs>\r\n                                <linearGradient id=\"splitColor\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                    <stop stopColor=\"green\" stopOpacity={1}/>\r\n                                    <stop stopColor=\"#D9EFF9\" stopOpacity={1}/>\r\n                                </linearGradient>\r\n                            </defs>\r\n                            <Area type=\"monotone\" dataKey=\"uv\" stroke=\"#000\" fill=\"url(#splitColor)\"/>\r\n                        </AreaChart>\r\n                    </Box>\r\n                </Box>\r\n            </>\r\n            }\r\n        </Box>\r\n    )\r\n}","import Box from \"@material-ui/core/Box\";\r\nimport classNames from \"classnames\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {useMediaQuery} from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    wrapperMobile: {\r\n        backgroundColor: \"#F7F7F7\",\r\n        width: \"300px\",\r\n        background: `url(${\"/images/steps.svg\"})`,\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"50% 0px\",\r\n        height: \"100%\",\r\n        borderRadius: \"10px\"\r\n    },\r\n    wrapperDesktop: {\r\n        backgroundColor: \"#F7F7F7\",\r\n        width: \"80%\",\r\n        maxWidth: \"800px\",\r\n        borderRadius: \"10px\",\r\n        background: `url(${\"/images/stepsBig.svg\"})`,\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"50% 0px\",\r\n        height: \"100%\",\r\n    }\r\n}));\r\n\r\n\r\nexport default function StepWrapper ({children, style}){\r\n\r\n    const classes = useStyles();\r\n    const matches = useMediaQuery('(min-width:800px)');\r\n\r\n    return (\r\n\r\n        <Box mt={4} p={3} style={style} boxShadow={2} className={classNames ( matches ?  classes.wrapperDesktop : classes.wrapperMobile)}>\r\n\r\n            {children}\r\n        </Box>\r\n    )\r\n\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {Box, useMediaQuery} from \"@material-ui/core\";\r\nimport {Redirect, useParams, useHistory} from 'react-router-dom';\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {StudentList} from \"../components/StudentList\";\r\nimport {deleteClassById, getClassById} from \"../utils/fetch-utils\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {Dashboard} from \"../components/Dashboard\";\r\nimport List from \"@material-ui/core/List\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport clsx from \"clsx\";\r\nimport StepWrapper from \"../components/wrapper/StepWrapper\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport {clearSurveyByClassId} from \"../utils/survey-fetch-utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    center: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n    },\r\n    centerRow: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-start\",\r\n        alignItems: \"center\",\r\n        border: \"solid\",\r\n        padding: \"1em\",\r\n        borderRadius: \"15px\",\r\n        backgroundColor: \"#F7F7F7\",\r\n        cursor: \"pointer\",\r\n    },\r\n    cName: {\r\n        fontSize: \"3em\",\r\n        fontWeight: \"bold\",\r\n    },\r\n    list: {\r\n        width: 250,\r\n    },\r\n    fullList: {\r\n        width: 'auto',\r\n    },\r\n    dialogDesktop: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n        alignItems: \"flex-start\",\r\n        width: \"100%\",\r\n    },\r\n    dialogMobile: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"space-around\",\r\n        width: \"100%\",\r\n    },\r\n    buttonText: {\r\n        marginLeft: \"8px\",\r\n        fontWeight: \"bold\",\r\n        fontSize: \"1.1em\"\r\n    }\r\n}));\r\n\r\n\r\nexport default function SingleClass() {\r\n\r\n    const [swipe, setSwipe] = useState({bottom: false})\r\n    const toggleDrawer = (anchor, open) => (event) => {\r\n\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n        setSwipe({...swipe, [anchor]: open});\r\n    };\r\n    const matches = useMediaQuery('(min-width:600px)');\r\n    const classes = useStyles();\r\n    const [showStudents, setShowStudents] = useState(false);\r\n    const {id} = useParams();\r\n    const [schoolClass, setSchoolClass] = useState(null)\r\n    const [redirectTrigger, setRedirectTrigger] = useState(false)\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    useEffect(() => {\r\n        getClassById(id).then(response => {\r\n            setSchoolClass(response)\r\n        });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    //Go to createSurvey Page\r\n    const history = useHistory();\r\n    const routeCreateSurvey = () => {\r\n        let path = `/${schoolClass.id}`\r\n        history.push(path)\r\n    }\r\n\r\n    const handleClickOpen = () => {\r\n\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const showStudentList = () => {\r\n        setShowStudents(true)\r\n    }\r\n    const hideStudentList = () => {\r\n        setShowStudents(false)\r\n    }\r\n\r\n    const redirectOverview = () => {\r\n        setRedirectTrigger(true)\r\n    }\r\n\r\n    const deleteClass = async () => {\r\n        const deleteBool = await deleteClassById(id);\r\n        setRedirectTrigger(deleteBool)\r\n    }\r\n    const clearSurvey = async () => {\r\n        const clearBool = await clearSurveyByClassId(id)\r\n        setRedirectTrigger(clearBool)\r\n    }\r\n\r\n    if (redirectTrigger) {\r\n        return (\r\n            <Redirect to={\"/overview\"}/>\r\n        )\r\n    }\r\n\r\n    const list = (anchor) => (\r\n        <div\r\n            className={clsx(classes.list, {\r\n                [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n            })}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(anchor, false)}\r\n            onKeyDown={toggleDrawer(anchor, false)}\r\n        >\r\n            <List>\r\n\r\n\r\n                {!showStudents ?\r\n                    <Box boxShadow={3} mb={2} className={classes.centerRow} onClick={showStudentList}> <img\r\n                        style={{height: \"4vh\"}} src=\"../images/classIcon.svg\" alt=\"\"/> <Typography\r\n                        className={classes.buttonText}>Show Students</Typography> </Box> :\r\n                    <Box boxShadow={3} mb={2} className={classes.centerRow} onClick={hideStudentList}> <img\r\n                        style={{height: \"4vh\"}} src=\"../images/hide.svg\" alt=\"\"/> <Typography\r\n                        className={classes.buttonText}>Hide Students</Typography> </Box>}\r\n\r\n                <Box boxShadow={3} mt={2} className={classes.centerRow} onClick={routeCreateSurvey}>\r\n                    <img src=\"../images/survey.svg\" alt=\"\" style={{height: \"4vh\"}}/>\r\n                    <Typography className={classes.buttonText}>Create Survey</Typography>\r\n                </Box>\r\n\r\n\r\n                <Box boxShadow={3} mt={2} className={classes.centerRow}\r\n                     onClick={handleClickOpen}>\r\n                    <img src=\"../images/alert.svg\" alt=\"\" style={{height: \"4vh\"}}/>\r\n                    <Typography className={classes.buttonText}>Danger Zone</Typography>\r\n                </Box>\r\n\r\n                <Box boxShadow={3} mt={2} className={classes.centerRow} onClick={redirectOverview}>\r\n                    <img src=\"../images/back.svg\" alt=\"\" style={{height: \"4vh\"}}/>\r\n                    <Typography className={classes.buttonText}>Overview</Typography>\r\n                </Box>\r\n\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <Box className={classes.center}>\r\n                {schoolClass && (\r\n                    <Box mt={2}> <Typography color={\"secondary\"}\r\n                                             className={classes.cName}>{schoolClass.classname} </Typography></Box>\r\n                )}\r\n\r\n                <StepWrapper><Dashboard schoolClassId={id}/></StepWrapper>\r\n\r\n\r\n                {showStudents ? <StudentList id={id}/> : null}\r\n\r\n\r\n            </Box>\r\n\r\n            <Box m={6}> {/*Swipe able Drawer*/}\r\n                <React.Fragment key={\"bottom\"}>\r\n                    <Box onClick={toggleDrawer(\"bottom\", true)}><img style={{height: \"8vh\"}} src=\"/images/menu.svg\"\r\n                                                                     alt=\"\"/></Box>\r\n                    <SwipeableDrawer\r\n                        anchor={\"bottom\"}\r\n                        open={swipe[\"bottom\"]}\r\n                        onClose={toggleDrawer(\"bottom\", false)}\r\n                        onOpen={toggleDrawer(\"bottom\", true)}\r\n                    >\r\n                        {list(\"bottom\")}\r\n                    </SwipeableDrawer>\r\n                </React.Fragment>\r\n\r\n            </Box>\r\n\r\n\r\n            <Dialog\r\n                open={open}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">{\" Attention! \"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        <Box style={{display: \"flex\", flexDirection: \"column\", alignItems: \"flex-start\", justifyContent: \"center\"}}>\r\n                        <Typography><b>Delete Class</b> deletes the entire class including its survey data.</Typography>\r\n                        <Typography><b>Clear survey</b> deletes all survey data belonging to this class.</Typography>\r\n                        <Typography>Your data will be permanently deleted.</Typography>\r\n                        </Box>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Box pb={3} px={3} className={matches ? classes.dialogDesktop : classes.dialogMobile}>\r\n                        <Box boxShadow={3} mt={2} style={{backgroundColor: \"#CA0B00\"}} className={classes.centerRow} onClick={clearSurvey}>\r\n                            <img src=\"../images/clear-format.svg\" alt=\"\" style={{height: \"4vh\"}}/>\r\n                            <Typography className={classes.buttonText}>Clear Survey</Typography>\r\n                        </Box>\r\n                        <Box boxShadow={3} mt={2} style={{backgroundColor: \"#CA0B00\"}} className={classes.centerRow} onClick={deleteClass}>\r\n                            <img src=\"../images/delete.svg\" alt=\"\" style={{height: \"4vh\"}}/>\r\n                            <Typography className={classes.buttonText}>Delete Class</Typography>\r\n                        </Box>\r\n                    </Box>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n\r\n        </>\r\n    )\r\n}","import React from \"react\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link} from 'react-router-dom'\r\nimport classNames from 'classnames';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    stickToBottom: {\r\n        width: '100%',\r\n        position: 'fixed',\r\n        bottom: 0,\r\n    },\r\n    footerProps: {\r\n        height: '60px',\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        textTransform: 'none'\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n        color: '#F7F7F7',\r\n        textTransform: 'none'\r\n}   ,\r\n}));\r\n\r\nexport default function Footer()\r\n{\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classNames(classes.stickToBottom, classes.footerProps)}>\r\n            <Button><Link className={classes.link} to=\"/\">Terms</Link></Button>\r\n            <Button><Link className={classes.link} to=\"/login\">Teacher?</Link></Button>\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\"\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Footer from \"../components/Footer\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport BasicButton from \"../components/BasicButton\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    center: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '65vh'\r\n    },\r\n    codeBox : {\r\n        backgroundColor: \"#F7F7F7\",\r\n        borderRadius: \"5px\"\r\n    }\r\n}))\r\n\r\n\r\nexport default function Landing() {\r\n\r\n    const[studentCode, setStudentCode] = useState(\"\");\r\n    const classes = useStyles();\r\n\r\n    console.log(studentCode)\r\n\r\n    const history = useHistory();\r\n    const routeSurveyAnswer = () => {\r\n        let path = `/answer/${studentCode}`\r\n        history.push(path)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.center}>\r\n                <Box p={5} boxShadow={3} style={{boxShadow: \"#FFFFF\"}} className={classes.codeBox}>\r\n                <form>\r\n                    <Typography color={\"primary\"} style={{fontWeight: \"bold\", fontSize:\"1.5em\"}}>Start Survey</Typography>\r\n                    <Box mt={2} >\r\n                    <TextField onChange={(event) => setStudentCode(event.target.value)} value={studentCode} id=\"outlined-basic\" label=\"Enter Code\" variant=\"outlined\"/>\r\n                    </Box>\r\n                </form>\r\n\r\n                <Box mt={4}>\r\n                    <BasicButton style={{fontSize: \"1em\"}} content={\"Start\"} onClick={routeSurveyAnswer}/>\r\n                </Box>\r\n                    </Box>\r\n            </div>\r\n            <Footer/>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Box} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    typography: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function SimplePopover({popoverContent}) {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n    return (\r\n        <div>\r\n            <Box aria-describedby={id} onClick={handleClick}>\r\n\r\n                <img src=\"../images/info.svg\" alt=\"\" style={{height: \"3.7vh\"}}/>\r\n\r\n\r\n            </Box>\r\n\r\n            <Popover\r\n                id={id}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <Typography className={classes.typography}>{popoverContent}</Typography>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Box} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    typography: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function SimplePopoverWhite({popoverContent}) {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n    return (\r\n        <div>\r\n            <Box aria-describedby={id} onClick={handleClick}>\r\n                <img src=\"../images/infoWhite.svg\" alt=\"\" style={{height: \"3.7vh\"}}/>\r\n            </Box>\r\n\r\n            <Popover\r\n                id={id}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                <Typography className={classes.typography}>{popoverContent}</Typography>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\nimport {getClassById} from \"../utils/fetch-utils\";\r\nimport {postNewSurvey} from \"../utils/survey-fetch-utils\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport WhiteWrapper from \"../components/wrapper/WhiteWrapper\";\r\nimport BasicButton from \"../components/BasicButton\";\r\nimport BackButton from \"../components/BackButton\";\r\nimport SimplePopover from \"../components/SimplePopover\";\r\nimport SimplePopoverWhite from \"../components/SimplePopoverWhite\";\r\nimport {useMediaQuery} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    center: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    headline: {\r\n        fontSize: \"2em\",\r\n        marginTop: \"1em\",\r\n    },\r\n    headlinetwo: {\r\n        fontSize: \"1.25em\",\r\n        fontWeight: \"bold\"\r\n    }\r\n}))\r\n\r\n\r\nexport default function SurveyCreation() {\r\n\r\n    const classes = useStyles();\r\n    const {id} = useParams();\r\n    const [schoolClass, setSchoolClass] = useState(null)\r\n    const [creationSuccess, setCreationSuccess] = useState(false)\r\n    const [singleQuestion, setSingleQuestion] = useState({questionText: '', keyWord: '', response: 0})\r\n    const [questionList, setQuestionList] = useState([]);\r\n    const [survey, setSurvey] = useState({\r\n        schoolClassId: '',\r\n        questionList: []\r\n    })\r\n    const matches = useMediaQuery('(min-width:800px)');\r\n\r\n\r\n    //Add single Question to state\r\n    const addQuestion = () => {\r\n        setQuestionList(questionList.concat(singleQuestion))\r\n        setSingleQuestion({questionText: \"\", keyWord: \"\", response: 0})\r\n    }\r\n\r\n    function handleChange(event) {\r\n        const {name, value} = event.target;\r\n        setSingleQuestion({\r\n            ...singleQuestion,\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    //Post fetch Method\r\n    const postSingleSurvey = async () => {\r\n        const postResult = await postNewSurvey({...survey, schoolClassId: schoolClass.id})\r\n        setCreationSuccess(postResult)\r\n    }\r\n\r\n    //set Survey state as soon as questionList changes\r\n    useEffect(() => {\r\n        setSurvey({...survey, questionList: questionList})\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [questionList])\r\n\r\n    //Initalize schoolclass\r\n    useEffect(() => {\r\n        getClassById(id).then(response => {\r\n            setSchoolClass(response)\r\n        });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    if (creationSuccess) {\r\n        return (\r\n            <Redirect to={\"/overview\"}/>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Box color={\"secondary\"} className={classes.center}>\r\n\r\n            {schoolClass &&\r\n            <Typography className={classes.headline} color={\"secondary\"}> Create Survey - <b>{schoolClass.classname}</b></Typography>}\r\n\r\n\r\n            <Grid container spacing={2} className={classes.center}>\r\n                <Grid item xs={12} md={6}>\r\n                    <WhiteWrapper>\r\n                        <Typography className={classes.headlinetwo} color={\"primary\"}>Questionlist</Typography>\r\n\r\n                        <List>\r\n                            {questionList && questionList.map((singleQuestion, index) =>\r\n                                <ListItem key={questionList.id}>\r\n                                    <ListItemAvatar>\r\n                                        <Avatar style={{backgroundColor: \"#272635\"}}>\r\n                                            <div style={{\r\n                                                display: \"flex\",\r\n                                                justifyContent: \"center\",\r\n                                                alignItems: \"center\",\r\n                                                height: \"4vh\",\r\n                                            }}>{index + 1}</div>\r\n                                        </Avatar>\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText key={questionList.id}\r\n                                                  primary={singleQuestion.questionText}\r\n                                    />\r\n                                    <Box m={2}>\r\n                                        <ListItemSecondaryAction key={questionList.id}>\r\n                                            <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                                <img src=\"../images/delete.svg\" alt=\"\" style={{height: \"2vh\"}}/>\r\n                                            </IconButton>\r\n                                        </ListItemSecondaryAction>\r\n                                    </Box>\r\n                                </ListItem>\r\n                            )}\r\n                        </List>\r\n                        <Box className={classes.center}>\r\n                            <TextField onChange={handleChange} id=\"standard-basic1\"\r\n                                       label=\"Question\" name=\"questionText\" value={singleQuestion.questionText}\r\n                                       autoComplete=\"on\" style={{width: \"250px\"}}/>\r\n\r\n                            <Box mt={2} ml={-7}\r\n                                 style={{display: \"flex\", alignItems: \"flex-end\", justifyContent: \"center\"}}>\r\n                                <Box mr={3}>\r\n                                    <SimplePopover popoverContent={\"Please add a descriptive keyword each question\"}/>\r\n                                </Box>\r\n                                <TextField onChange={handleChange} id=\"standard-basic2\"\r\n                                           label=\"Keyword\" name=\"keyWord\" value={singleQuestion.keyWord}\r\n                                           autoComplete=\"on\"/>\r\n                            </Box>\r\n                            <BasicButton style={{marginTop: \"20px\"}}  disabled={singleQuestion.questionText.length < 10 || singleQuestion.keyWord.length < 2} onClick={addQuestion} content={\"Add question\"}/>\r\n                        </Box>\r\n                    </WhiteWrapper>\r\n                </Grid>\r\n            </Grid>\r\n\r\n\r\n            <Box mt={2} style={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\", width: \"300px\"}}>\r\n                <Box ml={-12} style={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\", width: \"100px\"}}>\r\n                    <SimplePopoverWhite popoverContent={\"Please add between 3 - 5 questions\"}/>\r\n                </Box>\r\n                <Box>\r\n                    <BasicButton\r\n                        style={{fontSize: \"2em\"}} content={\"Create\"} onClick={postSingleSurvey}\r\n                        disabled={questionList.length < 3 || questionList.length > 5}/></Box>\r\n            </Box>\r\n\r\n            <Box  mt={matches ? 20 : 0}>\r\n            <BackButton/>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n    return (\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n            <Box width=\"100%\" mr={1}>\r\n                <LinearProgress variant=\"determinate\" {...props} />\r\n            </Box>\r\n            <Box minWidth={35}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n                    props.value,\r\n                )}%`}</Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n});\r\n\r\nexport default function LinearWithValueLabel({progressVal}) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <LinearProgressWithLabel value={progressVal} />\r\n        </div>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport WhiteWrapper from \"../components/wrapper/WhiteWrapper\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {getSurveyForStudent, postSurveyAnswer} from \"../utils/survey-fetch-utils\";\r\nimport BasicButton from \"../components/BasicButton\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport LinearWithValueLabel from \"../components/ProgressBar\";\r\n\r\nconst useStyles = makeStyles({\r\n    center: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    qHeadline: {\r\n        fontSize: \"1.25em\",\r\n        textAlign: \"left\",\r\n        fontWeight: \"normal\"\r\n    },\r\n    q: {\r\n        fontSize: \"1.5em\",\r\n        textAlign: \"left\",\r\n        fontWeight: \"bold\"\r\n    }\r\n})\r\n\r\nexport const SurveyAnswer = () => {\r\n    const classes = useStyles();\r\n    const {id} = useParams();\r\n    //State for newSurvey Fetch\r\n    const [currentSurvey, setCurrentSurvey] = useState([]);\r\n    //State for Question Counter\r\n    const [questionState, setQuestionState] = useState(0)\r\n    //State for accumulating answerList of each singleQuestions\r\n    const [responseList, setResponseList] = useState([])\r\n    //State for Slider Value after submitting one single Questions\r\n    const [userResponse, setUserResponse] = useState(3)\r\n\r\n\r\n    useEffect(() => {\r\n        getSurveyForStudent(id).then(fetchResponse => {\r\n            if (!fetchResponse)\r\n            {routeNoSurvey()}\r\n            else\r\n                setCurrentSurvey(fetchResponse)\r\n        })\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n\r\n    const history = useHistory();\r\n    const routeThankYou = () => {\r\n        let path = `/thankyou`\r\n        history.push(path)\r\n    }\r\n\r\n    const routeNoSurvey = () => {\r\n        let path = `/nosurvey`\r\n        history.push(path)\r\n    }\r\n\r\n    //Post fetch Method\r\n    const postAnswer = async (collectedAnswers) => {\r\n        await postSurveyAnswer(collectedAnswers);\r\n    }\r\n\r\n\r\n    const nextQuestionButton = () => {\r\n        setResponseList([...responseList, {\r\n            questionText: currentSurvey.questionList[questionState].questionText,\r\n            keyWord: currentSurvey.questionList[questionState].keyWord,\r\n            response: userResponse,\r\n        }])\r\n\r\n        setUserResponse(3)\r\n        setQuestionState(questionState + 1)\r\n    }\r\n    //IMPORTANT ...responseList unwrap Schreibweise merken!!!\r\n    const finishButton = () => {\r\n        let finalResponseList = [...responseList, {\r\n            questionText: currentSurvey.questionList[questionState].questionText,\r\n            keyWord: currentSurvey.questionList[questionState].keyWord,\r\n            response: userResponse\r\n        }]\r\n        let finalObject = {\r\n            studentCode: id,\r\n            questionList: finalResponseList,\r\n        }\r\n        postAnswer(finalObject).then(routeThankYou)\r\n    }\r\n    const marks = [\r\n        {\r\n            value: 1,\r\n            label: '1',\r\n        },\r\n        {\r\n            value: 2,\r\n            label: '2',\r\n        },\r\n        {\r\n            value: 3,\r\n            label: '3',\r\n        },\r\n        {\r\n            value: 4,\r\n            label: '4',\r\n        },\r\n        {\r\n            value: 5,\r\n            label: '5'\r\n        }\r\n    ];\r\n\r\n    function valuetext(value) {\r\n        return `${value}`;\r\n    }\r\n\r\n    function valueLabelFormat(value) {\r\n        return marks.findIndex((mark) => mark.value === value) + 1;\r\n    }\r\n\r\n    const handleChange = (e, value) => {\r\n        setUserResponse(value);\r\n    };\r\n\r\n\r\n    return (\r\n        <Box className={classes.center} mt={4}>\r\n            <Box>\r\n\r\n\r\n            </Box>\r\n\r\n            <WhiteWrapper>\r\n                <Box mb={1} className={classes.qHeadline}>Question {questionState + 1}</Box>\r\n                {currentSurvey.questionList && <LinearWithValueLabel progressVal={questionState/currentSurvey.questionList.length*100}/>  }\r\n\r\n                {currentSurvey.questionList && <Typography\r\n                    className={classes.q}> {currentSurvey.questionList[questionState].questionText}</Typography>}\r\n                <Box my={5}>\r\n\r\n\r\n                    <Slider\r\n                        min={1}\r\n                        max={5}\r\n                        onChange={handleChange}\r\n                        value={userResponse}\r\n                        valueLabelFormat={valueLabelFormat}\r\n                        getAriaValueText={valuetext}\r\n                        aria-labelledby=\"discrete-slider-restrict\"\r\n                        step={null}\r\n                        valueLabelDisplay=\"auto\"\r\n                        marks={marks}\r\n                    />\r\n                    <Box style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                        <Typography id=\"discrete-slider-restrict\" gutterBottom>\r\n                            very low\r\n                        </Typography>\r\n                        <Typography id=\"discrete-slider-restrict\" gutterBottom>\r\n                            very high\r\n                        </Typography>\r\n                    </Box>\r\n                </Box>\r\n                {currentSurvey.questionList && questionState < currentSurvey.questionList.length - 1 ?\r\n                    <BasicButton className={classes.q} content={\"Next Question\"} onClick={nextQuestionButton}/> :\r\n                    <BasicButton className={classes.q} onClick={finishButton} content={\"Finish\"}/>}\r\n\r\n            </WhiteWrapper>\r\n        </Box>\r\n    )\r\n\r\n}","import Box from \"@material-ui/core/Box\";\r\nimport classNames from \"classnames\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backImg: {\r\n        background: `url(${\"./images/diagonal2.svg\"})`,\r\n        backgroundSize: \"cover\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"center\",\r\n        height: \"100%\",\r\n    },\r\n    newFont : {\r\n        fontFamily: \"'Open Sans', sans-serif;\",\r\n        fontWeight: \"800\"\r\n    },\r\n    wrapper: {\r\n        backgroundColor: \"#F7F7F7\",\r\n        width: \"300px\",\r\n        maxWidth: \"800px\",\r\n        borderRadius: \"10px\"\r\n    },\r\n}));\r\n\r\n\r\nexport default function DiagonalWrapper2 ({children, style}){\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    return (\r\n\r\n        <Box mt={4} p={3} style={style} boxShadow={2} className={classNames (classes.newFont, classes.wrapper, classes.backImg)}>\r\n\r\n            {children}\r\n        </Box>\r\n    )\r\n\r\n}","import React from 'react';\r\nimport makeStyles from \"@material-ui/styles/makeStyles/makeStyles\";\r\nimport {Box} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DiagonalWrapper2 from \"./wrapper/Diagonal2Wrapper\";\r\n\r\nconst useStyles = makeStyles({\r\n    center: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\"\r\n    }\r\n})\r\n\r\nexport default function ThankYou() {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n\r\n        <Box className={classes.center}>\r\n            <DiagonalWrapper2 style={{fontSize: \"2em\"}}>\r\n\r\n                <Typography style={{fontSize: \"1.4em\", fontWeight: \"bold\"}}>See you soon!</Typography>\r\n                <Typography>Thank you for completing the survey</Typography>\r\n            </DiagonalWrapper2>\r\n            <Box mt={5}> <Typography style={{color: \"white\", fontSize: \"0.75em\"}}>You can close this window\r\n                now</Typography></Box>\r\n        </Box>\r\n\r\n    )\r\n}","import React from 'react';\r\nimport makeStyles from \"@material-ui/styles/makeStyles/makeStyles\";\r\nimport {Box} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DiagonalWrapper2 from \"./wrapper/Diagonal2Wrapper\";\r\n\r\nconst useStyles = makeStyles({\r\n    center: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\"\r\n    }\r\n})\r\n\r\nexport default function NoSurvey() {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n\r\n        <Box className={classes.center} mt={6}>\r\n            <DiagonalWrapper2 style={{fontSize: \"2em\", padding:\"1.5em 0.5em\"}}>\r\n                <Typography style={{fontSize: \"1.4em\", fontWeight: \"bold\"}}>See you soon!</Typography>\r\n                <Typography>It looks like there's currently no survey for you</Typography>\r\n\r\n            </DiagonalWrapper2>\r\n            <Box mt={5}> <Typography style={{color: \"white\", fontSize: \"0.75em\"}}>You can close this window\r\n                now</Typography></Box>\r\n        </Box>\r\n\r\n\r\n    )\r\n}","import React, {useEffect} from 'react'\r\nimport {getDecodedJWTToken, isJWTTokenValid} from \"../utils/jwt-utils\";\r\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\nimport Login from \"../pages/Login\";\r\nimport Register from \"../pages/Register\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport Overview from \"../pages/Overview\";\r\nimport SchoolClassCreation from \"../pages/SchoolClassCreation\";\r\nimport SingleClass from \"../pages/SingleClass\";\r\nimport Landing from \"../pages/Landing\";\r\nimport {Box} from \"@material-ui/core\";\r\nimport SurveyCreation from \"../pages/SurveyCreation\";\r\nimport {SurveyAnswer} from \"../pages/SurveyAnswer\";\r\nimport ThankYou from \"./ThankYou\";\r\nimport NoSurvey from \"./NoSurvey\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {LOGIN_FAILED, LOGIN_SUCCESS} from \"../actions\";\r\n\r\n\r\nexport default function Navigation() {\r\n\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {           //Keep Login status after Refresh\r\n        if (isJWTTokenValid()) {\r\n            dispatch({type: LOGIN_SUCCESS, payload: getDecodedJWTToken()});\r\n        } else {\r\n            dispatch({type: LOGIN_FAILED})\r\n        }\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <Box>\r\n            <Router>\r\n                <Header/>\r\n\r\n                <Switch>\r\n                    <Route path=\"/login\" component={Login} exact/>\r\n                    <Route path=\"/register\" component={Register}/>\r\n                    <Route path=\"/answer/:id\" component={SurveyAnswer} exact/>\r\n                    <Route path=\"/thankyou\" component={ThankYou} exact/>\r\n                    <Route path=\"/nosurvey\" component={NoSurvey} exact/>\r\n                    <PrivateRoute path=\"/overview\" component={Overview} exact/>\r\n                    <PrivateRoute path=\"/creation\" component={SchoolClassCreation} exact/>\r\n                    <PrivateRoute path=\"/singleclass/:id\" component={SingleClass} exact/>\r\n                    <PrivateRoute path=\"/:id\" component={SurveyCreation} exact/>\r\n\r\n                    <Route path=\"/\">\r\n                        <Landing/>\r\n                    </Route>\r\n                </Switch>\r\n\r\n            </Router>\r\n        </Box>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {createMuiTheme, MuiThemeProvider} from \"@material-ui/core\";\r\nimport Navigation from \"./components/Navigation\";\r\n\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: \"#272635\",\r\n        },\r\n        secondary: {\r\n            main: \"#F7F7F7\",\r\n        }\r\n    },\r\n    typography: {\r\n        fontFamily: ['Josefin Sans', 'sans-serif',].join(','),\r\n    },\r\n});\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <div className=\"App\">\r\n                <MuiThemeProvider theme={theme}>\r\n                    <Navigation/>\r\n                </MuiThemeProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {LOGIN, LOGIN_FAILED, LOGIN_SUCCESS, LOGOUT} from \"../actions\";\r\n\r\nconst initialState = {\r\n    authStatus: 'PENDING',\r\n};\r\n\r\nexport default function UserReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case LOGIN:\r\n            return {...state, authStatus: 'PENDING'};\r\n        case LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                authStatus: 'SUCCESS',\r\n                userData: action.payload,\r\n            };\r\n        case LOGIN_FAILED:\r\n            return {...state, authStatus: 'FAILED' };\r\n        case LOGOUT:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {FETCH_CLASSES_FAILURE, FETCH_CLASSES_REQUEST, FETCH_CLASSES_SUCCESS} from \"../actions\";\r\n\r\n\r\nconst initialState = {\r\n    fetchStatus: 'PENDING',\r\n};\r\n\r\nexport default function SchoolClassReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case FETCH_CLASSES_REQUEST:\r\n            return {...state, fetchStatus: 'PENDING'};\r\n        case FETCH_CLASSES_SUCCESS:\r\n            return {...state,\r\n                fetchStatus: 'SUCCESS',\r\n                responseData: action.payload\r\n            }\r\n        case FETCH_CLASSES_FAILURE:\r\n            return {...state,\r\n            fetchStatus: 'FAILED'};\r\n        default: return initialState;\r\n    }\r\n}","import UserReducer from \"./UserReducer\";\r\nimport {combineReducers} from \"redux\";\r\nimport SchoolClassReducer from \"./SchoolClassReducer\";\r\n\r\nconst allReducers = combineReducers({\r\n    loggedUser: UserReducer,\r\n    schoolClassesData: SchoolClassReducer,\r\n})\r\n\r\nexport default allReducers","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {createStore} from 'redux'\r\nimport allReducers from './reducers/index'\r\nimport { Provider } from 'react-redux'\r\n\r\nconst store = createStore(\r\n    allReducers,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n    <App />,\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}