{"version":3,"sources":["utils/jwt-utils.js","components/Header.jsx","components/BasicButton.jsx","utils/auth-utils.js","components/About.jsx","components/RegisterButton.jsx","pages/Login.jsx","actions/index.js","utils/fetch-utils.js","components/wrapper/WhiteWrapper.jsx","pages/Register.jsx","components/LoadingSpinner.jsx","components/PrivateRoute.jsx","components/SchoolClasses.jsx","components/wrapper/DiagonalWrapper.jsx","pages/Overview.jsx","components/BackButton.jsx","pages/SchoolClassCreation.jsx","components/StudentList.jsx","utils/survey-fetch-utils.js","components/Dashboard.jsx","components/wrapper/StepWrapper.jsx","pages/SingleClass.jsx","components/Footer.jsx","pages/Landing.jsx","pages/SurveyCreation.jsx","components/ProgressBar.jsx","pages/SurveyAnswer.jsx","components/wrapper/Diagonal2Wrapper.jsx","components/ThankYou.jsx","components/NoSurvey.jsx","components/Navigation.jsx","App.js","serviceWorker.js","reducers/UserReducer.jsx","reducers/index.js","index.js"],"names":["jwtDecode","require","key","getJWTToken","localStorage","getItem","removeJWTToken","removeItem","setJWTToken","token","setItem","getDecodedJWTToken","jwtToken","useStyles","makeStyles","theme","link","textDecoration","color","image","width","maxWidth","Header","classes","Box","px","className","to","src","alt","buttonStyle","textTransform","background","fontWeight","BasicButton","disabled","content","onClick","style","Button","classNames","variant","baseURL","process","username","password","a","fetch","method","headers","body","JSON","stringify","response","status","Error","statusText","text","about","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","minHeight","display","flexDirection","alignItems","headline","fontSize","textTypo","textAlign","padding","lineHeight","About","pb","Typography","py","m","boxShadow","backgroundColor","height","letterSpacing","borderRadius","RegisterButton","mt","p","centerPage","justifyContent","center","loginBox","borderWidth","Login","useState","setUsername","setPassword","dispatch","useDispatch","authStatus","useSelector","state","loggedUser","location","useLocation","locationState","from","pathname","TextField","onChange","event","target","value","id","label","autoComplete","type","pt","performLogin","then","userData","payload","catch","e","postClass","schoolClass","Authorization","teacher","json","getClassById","deleteClassById","newFont","fontFamily","wrapper","WhiteWrapper","children","backImg","outer","inner","Register","React","anchorEl","setAnchorEl","open","Boolean","undefined","confirmpassword","firstname","lastname","email","registerState","setRegisterState","handleChange","name","margin","registerData","preventDefault","currentTarget","length","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","typography","root","ProgressSpinner","CircularProgress","PrivateRoute","Component","component","rest","useEffect","Date","getTime","exp","render","props","boxStyle","border","details","cNames","SchoolClasses","schoolClasses","setSchoolClasses","sub","getSchoolClassesByTeacher","map","classname","DiagonalWrapper","list","fullList","centerRow","Overview","history","useHistory","routeCreateClass","push","userState","logout","anchor","bottom","swipe","setSwipe","toggleDrawer","Fragment","SwipeableDrawer","onOpen","clsx","role","onKeyDown","List","marginLeft","BackButton","column","SchoolClassCreation","singleStudent","setSingleStudent","studentlist","setStudentlist","cname","setCName","creationSuccess","setCreationSuccess","classmembers","setSchoolClass","postResult","placeholder","required","concat","StudentList","member","student","code","postNewSurvey","survey","studentCode","schoolClassId","stretch","Dashboard","allSurveyAnswers","setAllSurveyAnswers","resultByWeek","setResultByWeek","lastWeekResult","setLastWeekResult","prevLastWeekResult","setPrevLastWeekResult","keywordList","setKeywordList","data1","data2","data3","data","setData","keyword","index","subject","A","keywordListShortCapitalize","keywordShort","i","toUpperCase","lastWeek","currentWeek","singleWeekResult","uv","pv","amt","getSurveyAnswerListByClassId","singleResponse","localDate","weekResults","filter","result","tempKeywordList","singleSurveyAnswer","questionList","singleQuestion","keyWord","lastWeekResponseCalculator","fiveWeekResponses","allWeekResponseCalculator","week","responses","j","reduce","curr","acc","tempResponses","finalResponses","v","average","array","sum","cx","cy","outerRadius","dataKey","domain","stroke","fill","fillOpacity","ml","top","right","left","strokeDasharray","x1","y1","x2","y2","stopColor","stopOpacity","flexGrow","cName","SingleClass","showStudents","setShowStudents","useParams","redirectTrigger","setRedirectTrigger","routeCreateSurvey","path","showStudentList","hideStudentList","redirectOverview","deleteClass","boolResponse","mb","stickToBottom","position","footerProps","Footer","codeBox","Landing","setStudentCode","console","log","headlinetwo","SurveyCreation","questionText","setSingleQuestion","setQuestionList","setSurvey","postSingleSurvey","Grid","container","spacing","item","xs","md","ListItem","ListItemAvatar","Avatar","ListItemText","primary","ListItemSecondaryAction","IconButton","edge","aria-label","marginTop","LinearProgressWithLabel","mr","LinearProgress","minWidth","Math","round","LinearWithValueLabel","progressVal","qHeadline","q","SurveyAnswer","currentSurvey","setCurrentSurvey","questionState","setQuestionState","responseList","setResponseList","userResponse","setUserResponse","getSurveyForStudent","fetchResponse","routeNoSurvey","routeThankYou","postAnswer","collectedAnswers","b","marks","my","Slider","min","max","valueLabelFormat","findIndex","mark","getAriaValueText","aria-labelledby","step","valueLabelDisplay","gutterBottom","finalResponseList","DiagonalWrapper2","ThankYou","NoSurvey","Navigation","decodedToken","isJWTTokenValid","exact","createMuiTheme","palette","main","secondary","join","App","window","hostname","match","initialState","allReducers","combineReducers","action","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.7d920274.chunk.js","sourcesContent":["const jwtDecode = require('jwt-decode');\n\nconst key = 'teacher-token';\n\nexport function getJWTToken() {\n    return localStorage.getItem(key);\n}\n\nexport function removeJWTToken() {\n    return localStorage.removeItem(key);\n}\n\nexport function setJWTToken(token) {\n    return localStorage.setItem(key, token);\n}\n\nexport function isJWTTokenValid() {\n    const jwtToken = getJWTToken();\n    if (!jwtToken) {\n        return false;\n    }\n    const decodedToken = getDecodedJWTToken();\n    return new Date().getTime() / 1000 < decodedToken.exp;\n}\n\nexport function getDecodedJWTToken() {\n    const jwtToken = getJWTToken();\n    return jwtDecode(jwtToken);\n\n}\n","import {Link} from \"react-router-dom\";\nimport React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Box from \"@material-ui/core/Box\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    link: {\n        textDecoration: 'none',\n        color: 'black',\n    },\n    image: {\n        width: \"100%\",\n        maxWidth: \"550px\"\n    },\n\n\n}))\n\nexport default function Header() {\n\n\n    const classes = useStyles();\n    return (\n        <Box px={2}>\n            <div><Link className={classes.link} to=\"/\">\n                <img className={classes.image} src=\"/images/logo.svg\" alt=\"\"/>\n            </Link></div>\n\n        </Box>\n    )\n}","import React from 'react'\nimport Button from \"@material-ui/core/Button\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles((theme) => ({\n    buttonStyle : {\n        textTransform: 'none',\n        background: \"rgba(57,164,209)\",\n        color: \"white\",\n        fontWeight: \"bold\"\n    }\n}))\n\n\nexport default function BasicButton({className, disabled, content, onClick, style}) {\n\n    const classes = useStyles();\n    return(\n            <Button className={classNames(classes.buttonStyle, className)} disabled={disabled} onClick={onClick} style={style} variant=\"contained\">{content}</Button>\n    )\n}","const baseURL = process.env.REACT_APP_BASE_URL\nexport async function performLogin(username, password) {\n\n    const response = await fetch(`${baseURL}/login`, {\n\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username, password }),\n    })\n\n    if (response.status !== 200) {\n        throw new Error(`failed to login: ${response.statusText}`);\n    }\n\n    return await response.text();\n}\n\n","import {Box} from \"@material-ui/core\";\nimport React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n    about: {\n        backgroundImage: `url(${\"./images/greenback3.svg\"})`,\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundPosition: \"center\",\n        minHeight: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    headline: {\n        fontSize: \"4.5em\",\n        color: \"#F7F7F7\"\n\n    },\n    textTypo: {\n        textAlign: \"left\",\n        padding: \"1em\",\n        fontSize:\"1rem\",\n        lineHeight:\"1.75\",\n      /*  background: \"rgba(247, 247, 247, .7)\"*/\n    }\n}))\n\nexport const About = () => {\n\n    const classes = useStyles();\n\n    return (\n\n        <Box pb={2} className={classes.about}>\n\n            <Typography className={classes.headline}>About</Typography>\n\n            <Box px={3} py={4} m={5} boxShadow={3} style={{maxWidth: \"600px\", backgroundColor: \"#F7F7F7\"}}>\n                <img style={{height: \"25vh\"}} src=\"./images/twoPersons.png\" alt=\"\"/>\n                <Typography className={classes.textTypo}><span style={{letterSpacing: \"-2.25px\", fontSize:\"1.5em\", lineHeight:\".75\", fontWeight: \"bold\"}}>Envolve </span> is an app to <b>improve communication between students and their teachers </b>.\n                    <br /> The approach is to\n                establish a <b>continuous student-side feedback loop</b> to allow students to share their interests, ideas,\n                wishes, criticisms and so on.\n                <br />\n                 Based on this information, the teacher can <b> design lessons in the interest\n                        of the students </b>, thereby increasing their motivation to learn and ultimately improving the quality of\n                learning.</Typography>\n            </Box>\n\n        </Box>\n\n    )\n\n}","import Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Link} from \"react-router-dom\";\nimport React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    buttonStyle : {\n        textTransform: 'none',\n        background: \"rgba(57,164,209)\",\n        color: \"white\",\n        fontWeight: \"bold\",\n        borderRadius: \"5px\"\n    },\n    link: {\n        textTransform: \"none\",\n        textDecoration: 'none',\n        color: \"white\",\n\n    }\n}))\n\n\nexport const RegisterButton = () => {\n\n    const classes = useStyles()\n\n    return (\n        <Box>\n            <Typography color={\"secondary\"} style={{fontWeight: \"bold\"}}>Not yet registered?</Typography>\n            <Box mt={2} boxShadow={2} p={1} className={classes.buttonStyle}>\n                <Link className={classes.link} to=\"/register\">Create Account</Link>\n            </Box>\n        </Box>\n    )\n}","import React, { useState} from 'react'\nimport Typography from \"@material-ui/core/Typography\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport TextField from '@material-ui/core/TextField';\nimport Box from \"@material-ui/core/Box\";\nimport BasicButton from \"../components/BasicButton\";\nimport {getDecodedJWTToken, setJWTToken} from \"../utils/jwt-utils\";\nimport {performLogin} from \"../utils/auth-utils\";\nimport {Redirect, useLocation} from \"react-router-dom\";\nimport {About} from \"../components/About\";\nimport {RegisterButton} from \"../components/RegisterButton\";\nimport {LOGIN, LOGIN_FAILED, LOGIN_SUCCESS} from \"../actions\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    centerPage: {\n        display: \"flex\",\n        justifyContent: \"space-around\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        height: '70vh'\n    },\n    center: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    loginBox: {\n        padding: \"1.5em\",\n        borderRadius: \"5px\",\n        borderWidth: \"1px\",\n        width: \"250px\",\n        background: \"#F7F7F7\"\n    },\n\n}))\n\n\nexport default function Login() {\n\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n/*    const [errorInfo, setErrorInfo] = useState(\"\")*/\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n\n\n    function login() {\n        dispatch({ type: LOGIN });\n        performLogin(username, password)\n            .then((response) => {\n                setJWTToken(response);\n                const userData = getDecodedJWTToken();\n                dispatch({type: LOGIN_SUCCESS, payload: userData });\n            })\n            .catch((e) => {\n                dispatch({ type: LOGIN_FAILED });\n            })\n    }\n\n    const  {authStatus } = useSelector(state => state.loggedUser);\n\n\n    const location = useLocation();\n\n    if (authStatus === 'SUCCESS') {\n        let locationState = location.state || {from:{pathname: \"/overview\"}}\n        return <Redirect to={locationState.from.pathname} />;\n    }\n\n\n\n    return (\n        <>\n        <Box mt={5} className={classes.centerPage}>\n            <Box boxShadow={2} className={classes.loginBox}>\n            <form className={classes.center}>\n                <Typography style={{fontWeight: \"bold\", fontSize: \"1.5em\"}}>Teacher Login</Typography>\n                <TextField onChange={(event) => setUsername(event.target.value)} id=\"standard-basic1\" label=\"Username\" value={username} autoComplete=\"on\"/>\n                <TextField onChange={(event) => setPassword(event.target.value)} id=\"standard-basic2\" type=\"password\" label=\"Password\" value={password} autoComplete=\"on\"/>\n                <Box pt={2}>\n                    <BasicButton onClick={login} content={\"Login\"}/>\n                </Box>\n            </form>\n            </Box>\n            <RegisterButton/>\n        </Box>\n            <img style={{height: \"5vh\", padding: \"0.5em\"}} src=\"./images/arrowDown.svg\" alt=\"\"/>\n        <About/>\n        </>\n\n    )\n}","export const LOGIN = 'LOGIN';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILED = 'LOGIN_FAILED';\nexport const LOGOUT = 'LOGOUT';\n","import {getJWTToken} from \"./jwt-utils\";\nconst baseURL = process.env.REACT_APP_BASE_URL\n\nexport function postRegister(registerData) {\n    return fetch(`${baseURL}/register`, {\n        method: 'POST',\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(registerData),\n    }).then((response) => {\n        if (response.status !== 200) {\n            throw new Error('invalid response')\n        }\n        return response.text(); //necessary to handle token in the Browser, which comes with the Fetch from the backend\n    })\n}\n\nexport function postClass(schoolClass) {\n    const token = getJWTToken();\n    return fetch(`${baseURL}/api/classes`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': \"application/json\",\n            Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify(schoolClass)\n    }).then(() => {\n            return true;\n        }\n    ).catch(() => {\n            return false;\n        }\n    )\n}\n\nexport async function getSchoolClassesByTeacher(teacher) {\n    const token = getJWTToken();\n    const response = await fetch(`${baseURL}/api/classes/${teacher}`, {\n        method: 'GET',\n        headers: {\n            Authorization: `Bearer ${token}`,\n        },\n    })\n    if (response.status !== 200) {\n        throw new Error('something went wrong!!!');\n    }\n    return await response.json();\n}\n\nexport async function getClassById(id) {\n    const token = getJWTToken();\n    const response = await fetch(`${baseURL}/api/classes/class/${id}`, {\n        method: 'GET',\n        headers: {\n            Authorization: `Bearer ${token}`,\n        },\n    })\n    if (response.status !== 200) {\n        throw new Error('something went wrong?');\n    }\n    return await response.json();\n}\n\nexport function deleteClassById(id) {\n    const token = getJWTToken();\n    return fetch(`${baseURL}/api/classes/class/${id}`, {\n        method: 'DELETE',\n        headers: {\n            'Content-Type': \"application/json\",\n            Authorization: `Bearer ${token}`,\n        },\n\n    }).then(() => {\n        return true\n    }).catch(() => {\n        return false\n    })\n\n}","import Box from \"@material-ui/core/Box\";\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    newFont : {\n        fontFamily: \"'Open Sans', sans-serif;\",\n        fontWeight: \"800\"\n    },\n    wrapper: {\n        backgroundColor: \"#F7F7F7\",\n        width: \"300px\",\n        maxWidth: \"800px\",\n        borderRadius: \"10px\"\n    },\n\n}));\n\n\nexport default function WhiteWrapper ({children, style}){\n\n    const classes = useStyles();\n\n\n    return (\n\n        <Box mt={4} p={3} style={style} boxShadow={2} className={classNames (classes.newFont, classes.wrapper, classes.backImg)}>\n\n            {children}\n        </Box>\n    )\n\n}","import {Box} from \"@material-ui/core\";\nimport React, { useState} from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {postRegister} from \"../utils/fetch-utils\";\nimport BasicButton from \"../components/BasicButton\";\nimport {Link, Redirect} from 'react-router-dom';\nimport Popover from \"@material-ui/core/Popover\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {getDecodedJWTToken, setJWTToken} from \"../utils/jwt-utils\";\nimport WhiteWrapper from \"../components/wrapper/WhiteWrapper\";\nimport Button from \"@material-ui/core/Button\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {LOGIN_FAILED, LOGIN_SUCCESS} from \"../actions\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    outer: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: '50vh'\n    },\n    inner: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    link: {\n        textDecoration: 'none',\n        color: 'white',\n        textTransform: 'none'\n    }\n}));\n\nexport default function Register() {\n\n    const dispatch = useDispatch();\n    const classes = useStyles();\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n\n    const [registerState, setRegisterState] = useState({\n        username: '',\n        password: '',\n        confirmpassword: '',\n        firstname: '',\n        lastname: '',\n        email: '',\n    })\n\n    function handleChange(event) {\n        const {name, value} = event.target;\n        setRegisterState({\n            ...registerState,\n            [name]: value\n        });\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        if (registerState.confirmpassword !== registerState.password) {\n            setAnchorEl(event.currentTarget);\n        } else {\n            postRegister(registerState)\n                .then((response) => {\n                    setJWTToken(response);\n                    const userData = getDecodedJWTToken();\n                    dispatch({type: LOGIN_SUCCESS, payload: userData});\n                })\n                .catch(() => {\n                    dispatch({type: LOGIN_FAILED});\n                });\n        }\n    }\n\n    const {authStatus} = useSelector(state => state.loggedUser)\n\n    if (authStatus === 'SUCCESS') {\n        return <Redirect to={'/overview'}/>;\n    }\n\n\n    return (\n        <Box className={classes.inner}>\n            <WhiteWrapper style={{padding: \"3em 2.25em 4em 2.25em\"}}>\n                <Box className={classes.outer}>\n                    <h2>Register</h2>\n                    <form>\n                        <Box className={classes.inner}>\n                            <TextField style={{width: \"320px\"}} onChange={handleChange} name=\"username\"\n                                       label=\"Username\"/>\n                            <Box>\n                                <TextField style={{width: \"150px\", margin: \"10px\"}} onChange={handleChange}\n                                           name=\"firstname\"\n                                           label=\"Name\"/>\n                                <TextField style={{width: \"150px\", margin: \"10px\"}} onChange={handleChange}\n                                           name=\"lastname\"\n                                           label=\"Lastname\"/>\n                            </Box>\n                            <TextField style={{width: \"320px\"}} name=\"email\" onChange={handleChange}\n                                       label=\"Email Address\"/>\n                            <TextField style={{width: \"320px\", margin: \"10px\"}} type=\"password\"\n                                       onChange={handleChange} name=\"password\" label=\"Password\"/>\n                            <TextField style={{width: \"320px\"}} onChange={handleChange} name=\"confirmpassword\"\n                                       type=\"password\" label=\"Confirm Password\"/>\n                            <Box mt={5}>\n                                <BasicButton onClick={handleSubmit}\n                                             disabled={registerState.username.length < 2 || registerState.firstname.length < 2 || registerState.lastname.length < 2 || registerState.password.length < 2 || registerState.email.length < 2\n                                             } content={\"Register\"}/>\n                                {registerState.confirmpassword !== registerState.password &&\n                                <Popover\n                                    id={id}\n                                    open={open}\n                                    anchorEl={anchorEl}\n                                    onClose={handleClose}\n                                    anchorOrigin={{\n                                        vertical: 'bottom',\n                                        horizontal: 'center',\n                                    }}\n                                    transformOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'center',\n                                    }}\n                                >\n                                    <Typography className={classes.typography}>Passwords not matching</Typography>\n                                </Popover>}\n                            </Box>\n                        </Box>\n                    </form>\n                </Box>\n            </WhiteWrapper>\n            <Box pt={6} pb={2}>\n                <Button><\n                    Link className={classes.link} to=\"/login\">Back</Link>\n                </Button>\n            </Box>\n        </Box>\n    )\n}","\nimport React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n}));\n\nexport default function ProgressSpinner() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <CircularProgress/>\n        </div>\n    );\n}","import React, { useEffect} from \"react\";\n\nimport {removeJWTToken} from \"../utils/jwt-utils\";\n\nimport {Redirect, Route} from \"react-router-dom\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {LOGOUT} from \"../actions\";\n\n\nexport default function PrivateRoute({component: Component, ...rest}) {\n\n\n    const {authStatus, userData} = useSelector(state => state.loggedUser)\n    const dispatch = useDispatch();\n\n\n    //Each private Route is just accessible by authenticated Users\n\n    useEffect(() => {\n        if (\n            authStatus === 'SUCCESS' &&\n            new Date().getTime() / 1000 >= userData.exp\n        ) {\n            removeJWTToken();   //Take these two lines for the logout\n            dispatch({type: LOGOUT});\n        }\n    });\n\n    return (\n        <Route\n            {...rest}\n            render={(props) => {\n                if (authStatus === 'FAILED' || !authStatus) {\n                    return <Redirect to={{pathname:'/login', state: {from: props.location}}}/>\n                }\n                if (authStatus === 'SUCCESS') {\n\n                    if (new Date().getTime() / 1000 >= userData.exp) {\n                        return <Redirect to={{pathname:'/login', state: {from: props.location}}}/>\n                    }\n                    return <Component {...props} />\n                }\n                return <LoadingSpinner/>\n\n            }}\n        />\n    )\n}","import React, { useEffect, useState} from 'react';\nimport {getSchoolClassesByTeacher} from \"../utils/fetch-utils\";\nimport Box from \"@material-ui/core/Box\";\nimport classNames from 'classnames';\nimport {Link} from \"react-router-dom\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {useSelector} from \"react-redux\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    link: {\n        textDecoration: 'none',\n        color: 'black',\n        textTransform: 'none',\n        fontSize: '10px',\n        padding: \"0.4em\"\n    },\n    center: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    boxStyle: {\n        width: \"40%\",\n        height: \"80px\",\n        borderRadius: \"10px\",\n        background: 'linear-gradient(to right top, #0071A0, #39A4D1)', border: \"solid\", borderWidth: \"5px\"\n    },\n    details: {\n        color: \"white\",\n        fontSize: \"10px\"\n    },\n    cNames: {\n        color: \"white\",\n        fontSize: \"35px\"\n    },\n\n}));\n\n\nexport default function SchoolClasses() {\n\n    const [schoolClasses, setSchoolClasses] = useState([]);\n    const classes = useStyles();\n    //get the actual logged in userContext\n    const userState = useSelector(state => state.loggedUser);\n    //get the teacher out of the context\n    const teacher = userState.userData.sub\n\n\n    //get classes out of this teacher\n    useEffect(() => {\n        getSchoolClassesByTeacher(teacher).then(response => {\n            setSchoolClasses(response)\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n\n    return (\n        <>\n\n            <Box mt={2} key={schoolClasses.id} className={classes.center}>{schoolClasses.map((schoolClass) =>\n                <Box mt={2} className={classNames(classes.boxStyle, classes.center)} boxShadow={6}\n                     key={schoolClass.id} m={1}> <Link\n                    className={classNames(classes.link, classes.details)}\n                    to={`/singleclass/${schoolClass.id}`}\n                    key={schoolClasses.id}> <Typography style={{fontWeight: \"800\"}}\n                                                        className={classes.cNames}>{schoolClass.classname} </Typography>\n                </Link></Box>\n            )}</Box>\n\n\n\n        </>\n    )\n}","import Box from \"@material-ui/core/Box\";\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    backImg: {\n        background: `url(${\"./images/diagonalNew.svg\"})`,\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundPosition: \"center\",\n        height: \"100%\",\n    },\n    newFont : {\n        fontFamily: \"'Open Sans', sans-serif;\",\n        fontWeight: \"800\"\n    },\n    wrapper: {\n        backgroundColor: \"#F7F7F7\",\n        width: \"300px\",\n        maxWidth: \"800px\",\n        borderRadius: \"10px\"\n    },\n}));\n\n\nexport default function DiagonalWrapper ({children, style}){\n\n    const classes = useStyles();\n\n\n    return (\n\n        <Box mt={4} p={3} style={style} boxShadow={2} className={classNames (classes.newFont, classes.wrapper, classes.backImg)}>\n\n            {children}\n        </Box>\n    )\n\n}","import React from \"react\";\nimport SchoolClasses from \"../components/SchoolClasses\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport clsx from \"clsx\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport { useHistory} from \"react-router-dom\";\nimport {removeJWTToken} from \"../utils/jwt-utils\";\nimport DiagonalWrapper from \"../components/wrapper/DiagonalWrapper\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {LOGOUT} from \"../actions\";\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    center: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n    },\n    centerRow: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n        border: \"solid\",\n        padding: \"1em\",\n        borderRadius: \"15px\",\n        /* background: \"rgba(58, 209, 155, 0.5)\",*/\n        backgroundColor: \"#F7F7F7\"\n    },\n}));\n\n\nexport default function Overview() {\n\n    //For Redirect to /create\n    const history = useHistory();\n    const routeCreateClass = () =>{\n        let path = `/creation`;\n        history.push(path);\n    }\n\n\n\n    //For Logout\n\n    const dispatch = useDispatch();\n    const userState = useSelector(state => state.loggedUser)\n\n    function logout() {         //Logout-Methopd\n        removeJWTToken()        //Remove Token from localStorage\n        dispatch({type: LOGOUT})    //Trigger Logout by setting authStatus:undefined in the context\n    }\n\n    //For Drawer\n    const [swipe, setSwipe] = React.useState({\n        bottom: false,\n    });\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n\n        setSwipe({ ...swipe, [anchor]: open });\n    };\n\n    const list = (anchor) => (\n        <div\n            className={clsx(classes.list, {\n                [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n            })}\n            role=\"presentation\"\n            onClick={toggleDrawer(anchor, false)}\n            onKeyDown={toggleDrawer(anchor, false)}\n        >\n            <List>\n                <Box boxShadow={3} mt={2} className={classes.centerRow} onClick={routeCreateClass}>\n                    <img src=\"../images/plus.svg\" alt=\"\" style={{height: \"4vh\"}}/>\n                    <Typography style={{marginLeft: \"5px\"}}>Create Class</Typography>\n                </Box>\n                <Box boxShadow={3} mt={2} className={classes.centerRow} onClick={logout} >\n                    <img src=\"../images/logout.svg\" alt=\"\" style={{height: \"4vh\"}}/>\n                    <Typography style={{marginLeft: \"5px\"}}>Logout</Typography>\n                </Box>\n\n\n            </List>\n        </div>\n    );\n\n\n    const classes = useStyles();\n\n\n    return (\n        <Box className={classes.center}>\n\n            <DiagonalWrapper>\n                <h1>Heyho {userState.userData.firstname}!</h1>\n                <h4 style={{fontWeight: \"600\"}}>Check the latest survey results</h4>\n                <SchoolClasses/>\n            </DiagonalWrapper>\n\n\n\n            <div> {/*Swipe able Drawer*/}\n                <React.Fragment key={\"bottom\"}>\n                    <Box m={3} onClick={toggleDrawer(\"bottom\", true)} ><img style={{height: \"8vh\"}}  src=\"./images/menu.svg\" alt=\"\"/></Box>\n                    <SwipeableDrawer\n                        anchor={\"bottom\"}\n                        open={swipe[\"bottom\"]}\n                        onClose={toggleDrawer(\"bottom\", false)}\n                        onOpen={toggleDrawer(\"bottom\", true)}\n                    >\n                        {list(\"bottom\")}\n                    </SwipeableDrawer>\n                </React.Fragment>\n\n            </div>\n\n        </Box>\n    )\n}","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n\n    link: {\n        textDecoration: 'none',\n        color: 'white',\n        textTransform: 'none'\n    }\n}));\n\nexport default function BackButton() {\n    const classes = useStyles();\n    return (\n\n        <Box pt={6} pb={2}>\n        <Button><\n            Link className={ classes.link} to=\"/overview\">Back</Link>\n        </Button>\n        </Box>\n    )\n}","import React, { useEffect, useState} from 'react'\nimport TextField from \"@material-ui/core/TextField\";\nimport BasicButton from \"../components/BasicButton\";\nimport Box from \"@material-ui/core/Box\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {postClass} from \"../utils/fetch-utils\";\nimport Typography from \"@material-ui/core/Typography\";\nimport BackButton from \"../components/BackButton\";\nimport WhiteWrapper from \"../components/wrapper/WhiteWrapper\";\nimport {Redirect} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    column: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'center'\n    }\n}));\n\nexport default function SchoolClassCreation() {\n    const classes = useStyles();\n\n\n    const [singleStudent, setSingleStudent] = useState(\"\")\n    const [studentlist, setStudentlist] = useState([])\n    const [cname, setCName] = useState(\"\")\n    const [creationSuccess, setCreationSuccess] = useState(false)\n    const [schoolClass, setSchoolClass] = useState({\n        classname: '',\n        classmembers: []\n    })\n\n    function isDisabled(){\n        return !(schoolClass.classname.length >= 2 || schoolClass.classmembers.length >= 5);\n    }\n\n    function addStudent() {\n        setStudentlist(studentlist.concat(singleStudent))\n        setSingleStudent(\"\")\n    }\n\n\n    useEffect(() =>{\n        setSchoolClass({...schoolClass, classmembers: studentlist})\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[studentlist])\n\n    async function handleSubmit() {\n        const postResult = await postClass({...schoolClass, classname: cname});\n        setCreationSuccess(postResult);\n    }\n\n    if (creationSuccess) {\n        return (\n            <Redirect to={\"/overview\"} />\n        )\n    }\n\n    return (\n        <Box mt={3} className={classes.column}>\n            <WhiteWrapper>\n            <h4>Classname</h4>\n            <TextField placeholder=\"Enter Classname\" onChange={(event) => setCName(event.target.value)} value={cname} required/>\n\n            <Box m={2}>{schoolClass.classmembers.map(singleStudent => <Typography key={singleStudent}>{singleStudent}</Typography>)}</Box>\n\n            <Box mt={4}>\n            <h4>Students</h4>\n            <TextField onChange={(event) => setSingleStudent(event.target.value)} value={singleStudent}/>\n            </Box>\n            <Box mt={2}>\n                <BasicButton onClick={addStudent} content={\"Add new Student\"}/>\n            </Box>\n            <Box mt={4}>\n\n            <BasicButton disabled={isDisabled()} onClick={handleSubmit} content={\"Create\"}/>\n            </Box>\n            </WhiteWrapper>\n            <BackButton/>\n\n        </Box>\n    )\n}","import {Box} from \"@material-ui/core\";\nimport React, {useEffect, useState} from \"react\";\nimport {getClassById} from \"../utils/fetch-utils\";\nimport WhiteWrapper from \"./wrapper/WhiteWrapper\";\nimport Typography from \"@material-ui/core/Typography\";\n\n\n\nexport const StudentList = ({id}) => {\n\n    const [schoolClass, setSchoolClass] = useState(null)\n\n\n    useEffect(()=> {\n        getClassById(id).then(response => {\n            setSchoolClass(response)\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n\n    return (\n\n        <Box>\n\n        {schoolClass &&  (    <WhiteWrapper style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\"}}>\n        {schoolClass.classmembers.map((member) =>\n             <Typography style={{margin: \"0 0.5em 0 0.5em\"}} key={member.student}>{member.student} ({member.code})</Typography>)} </WhiteWrapper>)\n        }\n\n        </Box>\n\n    )\n}","import {getJWTToken} from \"./jwt-utils\";\n\nconst baseURL = \"https://envolve-feedback.herokuapp.com\"\n\nexport function postNewSurvey(survey) {\n    const token = getJWTToken();\n    return fetch( `${baseURL}/api/survey`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': \"application/json\",\n            Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify(survey)\n    }).then(() => {\n            return true;\n        }\n    ).catch(() => {\n            return false;\n        }\n    )\n}\n\nexport async function getSurveyForStudent(studentCode) {\n/*    const token = getJWTToken();*/\n    const response = await fetch(`${baseURL}/api/survey/${studentCode}`, {\n        method: 'GET',\n      /*  headers: {\n            Authorization: `Bearer ${token}`,\n        },*/\n    })\n    if (response.status !== 200) {\n    return false\n    }\n    return await response.json();\n}\n\nexport function postSurveyAnswer(survey) {\n\n    //ACHTUNG das slash / vor api/... ist wichtig, damit der fetch funktioniert!\n    return fetch(`${baseURL}/api/survey/feedback`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': \"application/json\",\n\n        },\n        body: JSON.stringify(survey)\n    }).then(() => {\n            return true;\n        }\n    ).catch(() => {\n            return false;\n        }\n    )\n}\n\n\nexport async function getSurveyAnswerListByClassId(schoolClassId) {\n    const token = getJWTToken();\n    const response = await fetch(`${baseURL}/api/survey/feedback/all/${schoolClassId}`, {\n        method: 'GET',\n        headers: {\n            Authorization: `Bearer ${token}`,\n        },\n    })\n    if (response.status !== 200) {\n        throw new Error('something went wrong!!!');\n    }\n    return await response.json();\n}","import Box from \"@material-ui/core/Box\";\nimport React, {useEffect, useState} from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport RadarChart from \"recharts/lib/chart/RadarChart\";\nimport {\n    Area,\n    AreaChart,\n    Bar,\n    CartesianGrid,\n    Legend,\n    PolarAngleAxis,\n    PolarGrid,\n    Radar,\n    XAxis,\n    YAxis\n} from \"recharts\";\nimport Typography from \"@material-ui/core/Typography\";\nimport BarChart from \"recharts/lib/chart/BarChart\";\nimport {getSurveyAnswerListByClassId} from \"../utils/survey-fetch-utils\";\nimport PolarRadiusAxis from \"recharts/lib/polar/PolarRadiusAxis\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    stretch: {\n        fontSize: \"0.75em\",\n    },\n\n}));\n\n\nexport const Dashboard = ({schoolClassId}) => {\n\n    const classes = useStyles();\n    const [allSurveyAnswers, setAllSurveyAnswers] = useState([]);\n    const [resultByWeek, setResultByWeek] = useState([])\n    const [lastWeekResult, setLastWeekResult] = useState([])\n    const [prevLastWeekResult, setPrevLastWeekResult] = useState([])\n    const [keywordList, setKeywordList] = useState([])\n    const [data, setData] = useState({data1: undefined, data2: undefined, data3: undefined})\n\n    useEffect(() => {\n        {\n            const data1 =\n                keywordList.map((keyword, index) => {\n                    return {subject: keyword, A: lastWeekResult[index]}\n                })\n\n            const keywordListShortCapitalize = []\n            keywordList.map(keyword => {\n               let keywordShort = '';\n                for(let i = 0; i < 4; i++) {\n                  keywordShort += keyword[i].toUpperCase();\n                }\n                keywordListShortCapitalize.push(keywordShort)\n            });\n\n\n            const data2 =\n                keywordListShortCapitalize.map((keyword, index) => {\n                  return {name: keyword, lastWeek: prevLastWeekResult[index], currentWeek: lastWeekResult[index] }\n                })\n\n            const data3 =\n                resultByWeek.map((singleWeekResult, index) => {\n                    return {name: `W${index + 1}`, uv: singleWeekResult, pv: 1.3, amt: 2.0}\n                })\n            ;\n            setData({data1, data2, data3})\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [keywordList])\n\n\n    //FETCH ALL SURVEYANSWER (WHOLE OBJECT)\n    useEffect(() => {\n        getSurveyAnswerListByClassId(schoolClassId).then(response => {\n            setAllSurveyAnswers(response.map(singleResponse => {\n                return {\n                    ...singleResponse, localDate: new Date(singleResponse.localDate)\n                }\n            }));\n        })\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n\n    //FILTER ALL RESPONSE INTO DATES\n    useEffect(() => {\n        if (allSurveyAnswers.length > 0) {\n            const weekResults = []\n            for (let i = 0; i < 5; i++) {\n                weekResults.push(allSurveyAnswers.filter(result => {\n                    return result.localDate.getTime() > new Date().getTime() - ((i + 1) * 7 * 24 * 60 * 60 * 1000) && result.localDate.getTime() < new Date().getTime() - (i * 7 * 24 * 60 * 60 * 1000)\n                }));\n            }\n\n            //Get Keywords out of Questions\n            const tempKeywordList = []\n            allSurveyAnswers.map(singleSurveyAnswer => {\n                    singleSurveyAnswer.questionList.map(singleQuestion => {\n                      tempKeywordList.push(singleQuestion.keyWord)\n                    })\n            })\n            setKeywordList(tempKeywordList)\n\n\n\n            //First Table\n            setLastWeekResult(lastWeekResponseCalculator(weekResults[0]));\n\n            //Second Table\n            setPrevLastWeekResult(lastWeekResponseCalculator(weekResults[1]))\n\n\n            //Third Table\n            const fiveWeekResponses = []\n            for (let i = 0; i < weekResults.length; i++) {\n                fiveWeekResponses.push(allWeekResponseCalculator(weekResults[i]))\n            }\n            setResultByWeek(fiveWeekResponses)\n\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [allSurveyAnswers])\n\n\n    const allWeekResponseCalculator = (week) => {\n        let responses = []\n\n        for (let i = 0; i < week.length; i++) {\n            for (let j = 0; j < week[i].questionList.length; j++) {\n                responses.push(week[i].questionList[j].response)\n            }\n        }\n        if (responses.length > 0) {\n            const sum = responses.reduce((curr, acc) => {\n                return curr + acc\n            })\n\n            return sum / responses.length\n        }\n        return null\n    }\n\n    const lastWeekResponseCalculator = (student) => {\n\n        /*    let tempResponses = Array(student[0].questionList.length).fill([])*/\n        let tempResponses = [[], [], [], [], []]\n        for (let j = 0; j < student.length; j++) {\n            for (let i = 0; i < student[j].questionList.length; i++) {\n                tempResponses[i].push(student[j].questionList[i].response)\n            }\n        }\n\n        let finalResponses = []\n\n        for (let v = 0; v < tempResponses.length; v++) {\n            finalResponses.push(average(tempResponses[v]))\n        }\n        return finalResponses\n\n    }\n\n    const average = (array) => {\n        let sum = 0;\n        for (let p = 0; p < array.length; p++) {\n            sum += array[p];\n        }\n        return sum / array.length\n    }\n\n\n    return (\n        <Box color={\"secondary\"} className={classes.stretch}>\n\n            {data.data1 &&\n            <>\n                <Typography style={{fontSize: \"2.5em\", fontWeight: \"bold\", padding: \"0.25em\", textAlign: \"left\"}}>LAST\n                    WEEK</Typography>\n                <Box mt={-3}>\n                    <RadarChart cx={140} cy={140} outerRadius={60} width={300} height={250} data={data.data1}>\n                        <PolarGrid/>\n                        <PolarAngleAxis dataKey=\"subject\"/>\n                        <PolarRadiusAxis domain={[0, 5]}/>\n                        <Radar name=\"Mike\" dataKey=\"A\" stroke=\"#8884d8\" fill=\"#D9EFF9\" fillOpacity={0.6}/>\n                    </RadarChart>\n                </Box>\n\n\n                <Box mt={4}>\n                    <Typography style={{\n                        fontSize: \"2.5em\",\n                        fontWeight: \"bold\",\n                        padding: \"0.25em\",\n                        textAlign: \"left\"\n                    }}>CHANGES</Typography>\n                    <Box mt={2} ml={-6}>\n                        <BarChart width={350} height={300} data={data.data2}\n                                  margin={{top: 5, right: 1, left: 1, bottom: 5}}>\n                            <CartesianGrid strokeDasharray=\"3 3\"/>\n                            <XAxis dataKey=\"name\"/>\n                            <YAxis domain={[0, 5]}/>\n                            <Legend/>\n                            <Bar dataKey=\"lastWeek\" fill=\"#39A4D1\"/>\n                            <Bar dataKey=\"currentWeek\" fill=\"#82ca9d\"/>\n                        </BarChart>\n                    </Box>\n                </Box>\n\n                <Box mt={6}>\n                    <Typography style={{\n                        fontSize: \"2.5em\",\n                        fontWeight: \"bold\",\n                        padding: \"0.25em\",\n                        textAlign: \"left\"\n                    }}>OVERALL</Typography>\n                    <Box mt={2} ml={-4}>\n                        <AreaChart\n                            width={350}\n                            height={300}\n                            data={data.data3}\n                            margin={{top: 10, right: 30, left: 0, bottom: 0}}\n                        >\n                            <CartesianGrid strokeDasharray=\"3 3\"/>\n                            <XAxis dataKey=\"name\"/>\n                            <YAxis domain={[0, 5]}/>\n\n                            <defs>\n                                <linearGradient id=\"splitColor\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                                    <stop stopColor=\"green\" stopOpacity={1}/>\n                                    {/*offset={off}*/}\n                                    <stop stopColor=\"#D9EFF9\" stopOpacity={1}/>\n                                    {/*offset={off}*/}\n                                </linearGradient>\n                            </defs>\n                            <Area type=\"monotone\" dataKey=\"uv\" stroke=\"#000\" fill=\"url(#splitColor)\"/>\n                        </AreaChart>\n                    </Box>\n                </Box>\n            </>\n            }\n        </Box>\n    )\n}","import Box from \"@material-ui/core/Box\";\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    backImg: {\n        background: `url(${\"/images/steps.svg\"})`,\n        /*     backgroundSize: \"cover\",*/\n        backgroundRepeat: \"no-repeat\",\n        backgroundPosition: \"50% 0px\",\n        height: \"100%\",\n    },\n    newFont : {\n        fontFamily: \"'Open Sans', sans-serif;\",\n        fontWeight: \"800\"\n    },\n    wrapper: {\n        backgroundColor: \"#F7F7F7\",\n        width: \"300px\",\n        maxWidth: \"800px\",\n        borderRadius: \"10px\"\n    },\n\n\n}));\n\n\nexport default function WhiteWrapper ({children, style}){\n\n    const classes = useStyles();\n\n\n    return (\n\n        <Box mt={4} p={3} style={style} boxShadow={2} className={classNames (classes.newFont, classes.wrapper, classes.backImg)}>\n\n            {children}\n        </Box>\n    )\n\n}","import React, {useEffect, useState} from 'react';\nimport {Box} from \"@material-ui/core\";\nimport {Redirect, useParams, useHistory} from 'react-router-dom';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {StudentList} from \"../components/StudentList\";\nimport {deleteClassById, getClassById} from \"../utils/fetch-utils\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Dashboard} from \"../components/Dashboard\";\nimport List from \"@material-ui/core/List\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport clsx from \"clsx\";\n\nimport StepWrapper from \"../components/wrapper/StepWrapper\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    center: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n    },\n    centerRow: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n        border: \"solid\",\n        padding: \"1em\",\n        borderRadius: \"15px\",\n        backgroundColor: \"#F7F7F7\"\n    },\n    cName: {\n        fontSize: \"3em\",\n        fontWeight: \"bold\",\n    },\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n    },\n}));\n\n\nexport default function SingleClass() {\n\n    const [swipe, setSwipe] = useState({bottom: false})\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n        setSwipe({...swipe, [anchor]: open});\n    };\n\n    const classes = useStyles();\n    const [showStudents, setShowStudents] = useState(false);\n    const {id} = useParams();\n    const [schoolClass, setSchoolClass] = useState(null)\n    const [redirectTrigger, setRedirectTrigger] = useState(false)\n\n    useEffect(() => {\n        getClassById(id).then(response => {\n            setSchoolClass(response)\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    //Go to createSurvey Page\n    const history = useHistory();\n    const routeCreateSurvey = () => {\n        let path = `/${schoolClass.id}`\n        history.push(path)\n    }\n\n\n    const showStudentList = () => {\n        setShowStudents(true)\n    }\n    const hideStudentList = () => {\n        setShowStudents(false)\n    }\n\n    const redirectOverview = () => {\n        setRedirectTrigger(true)\n    }\n\n    const deleteClass = async () => {\n        const boolResponse = await deleteClassById(id);\n        setRedirectTrigger(boolResponse)\n    }\n\n    if (redirectTrigger) {\n        return (\n            <Redirect to={\"/overview\"}/>\n        )\n    }\n\n    const list = (anchor) => (\n        <div\n            className={clsx(classes.list, {\n                [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n            })}\n            role=\"presentation\"\n            onClick={toggleDrawer(anchor, false)}\n            onKeyDown={toggleDrawer(anchor, false)}\n        >\n            <List>\n\n                {/*\n            BackgroundColor defined in index.css\n*/}\n                {!showStudents ?\n                    <Box boxShadow={3} mb={2} className={classes.centerRow} onClick={showStudentList}> <img\n                        style={{height: \"4vh\"}} src=\"../images/classIcon.svg\" alt=\"\"/> <Typography\n                        style={{marginLeft: \"5px\"}}>Show Students</Typography> </Box> :\n                    <Box boxShadow={3} mb={2} className={classes.centerRow} onClick={hideStudentList}> <img\n                        style={{height: \"4vh\"}} src=\"../images/hide.svg\" alt=\"\"/> <Typography\n                        style={{marginLeft: \"5px\"}}>Hide Students</Typography> </Box>}\n\n                <Box boxShadow={3} mt={2} className={classes.centerRow} onClick={routeCreateSurvey}>\n                    <img src=\"../images/survey.svg\" alt=\"\" style={{height: \"4vh\"}}/>\n                    <Typography style={{marginLeft: \"5px\"}}>Create Survey</Typography>\n                </Box>\n\n                <Box boxShadow={3} mt={2} className={classes.centerRow} onClick={deleteClass}>\n                    <img src=\"../images/delete.svg\" alt=\"\" style={{height: \"4vh\"}}/>\n                    <Typography style={{marginLeft: \"5px\"}}>Delete Class</Typography>\n                </Box>\n\n                <Box boxShadow={3} mt={2} className={classes.centerRow} onClick={redirectOverview}>\n                    <img src=\"../images/back.svg\" alt=\"\" style={{height: \"4vh\"}}/>\n                    <Typography style={{marginLeft: \"5px\"}}>Overview</Typography>\n                </Box>\n\n            </List>\n        </div>\n    );\n\n\n    return (\n        <>\n\n\n            <Box className={classes.center} >\n                {schoolClass && (\n                    <Box mt={2}> <Typography color={\"secondary\"}\n                                             className={classes.cName}>{schoolClass.classname} </Typography></Box>\n                )}\n\n                <StepWrapper><Dashboard schoolClassId={id}/></StepWrapper>\n\n\n                {showStudents ? <StudentList id={id}/> : null}\n\n\n\n\n            </Box>\n\n            <Box m={4}> {/*Swipe able Drawer*/}\n                <React.Fragment key={\"bottom\"}>\n                    <Box onClick={toggleDrawer(\"bottom\", true)}><img style={{height: \"8vh\"}} src=\"/images/menu.svg\"\n                                                                     alt=\"\"/></Box>\n                    <SwipeableDrawer\n                        anchor={\"bottom\"}\n                        open={swipe[\"bottom\"]}\n                        onClose={toggleDrawer(\"bottom\", false)}\n                        onOpen={toggleDrawer(\"bottom\", true)}\n                    >\n                        {list(\"bottom\")}\n                    </SwipeableDrawer>\n                </React.Fragment>\n\n            </Box>\n\n        </>\n    )\n}","import React from \"react\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport {Link} from 'react-router-dom'\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles((theme) => ({\n    stickToBottom: {\n        width: '100%',\n        position: 'fixed',\n        bottom: 0,\n    },\n    footerProps: {\n        height: '60px',\n        display: 'flex',\n        justifyContent: 'space-around',\n        textTransform: 'none'\n    },\n    link: {\n        textDecoration: 'none',\n        color: '#F7F7F7',\n        textTransform: 'none'\n}   ,\n}));\n\nexport default function Footer()\n{\n    const classes = useStyles();\n\n    return (\n        <div className={classNames(classes.stickToBottom, classes.footerProps)}>\n            <Button><Link className={classes.link} to=\"/\">Terms</Link></Button>\n            <Button><Link className={classes.link} to=\"/login\">Teacher?</Link></Button>\n        </div>\n    )\n}","import React, {useState} from \"react\"\nimport TextField from '@material-ui/core/TextField';\nimport Footer from \"../components/Footer\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport BasicButton from \"../components/BasicButton\";\nimport {useHistory} from \"react-router-dom\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    center: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '65vh'\n    },\n    codeBox : {\n        backgroundColor: \"#F7F7F7\",\n        borderRadius: \"5px\"\n    }\n}))\n\n\nexport default function Landing() {\n\n    const[studentCode, setStudentCode] = useState(\"\");\n    const classes = useStyles();\n\n    console.log(studentCode)\n\n    const history = useHistory();\n    const routeSurveyAnswer = () => {\n        let path = `/answer/${studentCode}`\n        history.push(path)\n    }\n\n    return (\n        <>\n            <div className={classes.center}>\n                <Box p={5} boxShadow={3} style={{boxShadow: \"#FFFFF\"}} className={classes.codeBox}>\n                <form>\n                    <Typography color={\"primary\"} style={{fontWeight: \"bold\", fontSize:\"1.5em\"}}>Start Survey</Typography>\n                    <Box mt={2} >\n                    <TextField onChange={(event) => setStudentCode(event.target.value)} value={studentCode} id=\"outlined-basic\" label=\"Enter Code\" variant=\"outlined\"/>\n                    </Box>\n                </form>\n\n                <Box mt={4}>\n                    <BasicButton style={{fontSize: \"1em\"}} content={\"Start\"} onClick={routeSurveyAnswer}/>\n                </Box>\n                    </Box>\n            </div>\n            <Footer/>\n        </>\n    )\n}","import React, {useEffect, useState} from 'react';\nimport {Redirect, useParams} from \"react-router-dom\";\nimport {getClassById} from \"../utils/fetch-utils\";\nimport {postNewSurvey} from \"../utils/survey-fetch-utils\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport TextField from '@material-ui/core/TextField';\nimport Grid from \"@material-ui/core/Grid\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport WhiteWrapper from \"../components/wrapper/WhiteWrapper\";\nimport BasicButton from \"../components/BasicButton\";\nimport BackButton from \"../components/BackButton\";\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        flexGrow: 1,\n    },\n    center: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    headline: {\n        fontSize: \"2em\",\n    },\n    headlinetwo: {\n        fontSize: \"1.25em\",\n        fontWeight: \"bold\"\n    }\n}))\n\n\nexport default function SurveyCreation() {\n\n    const classes = useStyles();\n    const {id} = useParams();\n    const [schoolClass, setSchoolClass] = useState(null)\n    const [creationSuccess, setCreationSuccess] = useState(false)\n    const [singleQuestion, setSingleQuestion] = useState({questionText: '', keyWord: '', response: 0})\n    const [questionList, setQuestionList] = useState([]);\n    const [survey, setSurvey] = useState({\n        schoolClassId: '',\n        questionList: []\n    })\n\n\n    //Buggy\n    //Add single Question to state\n    const addQuestion = () => {\n        setQuestionList(questionList.concat(singleQuestion))\n        setSingleQuestion({questionText: \"\", keyWord: \"\", response: 0})\n    }\n\n    function handleChange(event) {\n        const {name, value} = event.target;\n        setSingleQuestion({\n            ...singleQuestion,\n            [name]: value\n        });\n    }\n\n    //Post fetch Method\n    const postSingleSurvey = async () => {\n        const postResult = await postNewSurvey({...survey, schoolClassId: schoolClass.id})\n        setCreationSuccess(postResult)\n    }\n\n    //set Survey state as soon as questionList changes\n    useEffect(() => {\n        setSurvey({...survey, questionList: questionList})\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [questionList])\n\n    //Initalize schoolclass\n    useEffect(() => {\n        getClassById(id).then(response => {\n            setSchoolClass(response)\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    if (creationSuccess) {\n        return (\n            <Redirect to={\"/overview\"}/>\n        )\n    }\n\n    console.log(survey)\n\n    return (\n        <Box color={\"secondary\"} className={classes.center}>\n\n            {schoolClass &&\n            <Typography className={classes.headline} color={\"secondary\"}> Create Survey - <b>{schoolClass.classname}</b></Typography>}\n\n\n            <Grid container spacing={2} className={classes.center}>\n                <Grid item xs={12} md={6}>\n                    <WhiteWrapper>\n                        <Typography className={classes.headlinetwo} color={\"primary\"}>Questionlist</Typography>\n\n                        <List>\n                            {questionList && questionList.map((singleQuestion, index) =>\n                                <ListItem key={questionList.id}>\n                                    <ListItemAvatar>\n                                        <Avatar style={{backgroundColor: \"#272635\"}}>\n                                            <div style={{\n                                                display: \"flex\",\n                                                justifyContent: \"center\",\n                                                alignItems: \"center\",\n                                                height: \"4vh\",\n                                            }}>{index + 1}</div>\n                                        </Avatar>\n                                    </ListItemAvatar>\n                                    <ListItemText key={questionList.id}\n                                        primary={singleQuestion.questionText}\n                                    />\n                                    <Box m={2}>\n                                        <ListItemSecondaryAction key={questionList.id}>\n                                            <IconButton edge=\"end\" aria-label=\"delete\">\n                                                <img src=\"../images/delete.svg\" alt=\"\" style={{height: \"2vh\"}}/>\n                                            </IconButton>\n                                        </ListItemSecondaryAction>\n                                    </Box>\n                                </ListItem>\n                            )}\n                        </List>\n                        <Box className={classes.center}>\n                            <TextField onChange={handleChange} id=\"standard-basic1\"\n                                       label=\"Question\" name=\"questionText\" value={singleQuestion.questionText} autoComplete=\"on\"/>\n                            <Box>\n                            <TextField onChange={handleChange} id=\"standard-basic2\"\n                                       label=\"Keyword\" name=\"keyWord\" value={singleQuestion.keyWord} autoComplete=\"on\"/>\n                                <img src=\"../images/question2.svg\" alt=\"\" style={{height: \"2vh\"}}/>\n                            </Box>\n\n                            <BasicButton style={{marginTop: \"20px\"}} onClick={addQuestion} content={\"Add question\"}/>\n                        </Box>\n                    </WhiteWrapper>\n                </Grid>\n            </Grid>\n\n\n            <Box mt={2}> <BasicButton style={{fontSize: \"2em\"}} content={\"Create\"} onClick={postSingleSurvey}/></Box>\n\n            <BackButton/>\n\n        </Box>\n    )\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction LinearProgressWithLabel(props) {\n    return (\n        <Box display=\"flex\" alignItems=\"center\">\n            <Box width=\"100%\" mr={1}>\n                <LinearProgress variant=\"determinate\" {...props} />\n            </Box>\n            <Box minWidth={35}>\n                <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n                    props.value,\n                )}%`}</Typography>\n            </Box>\n        </Box>\n    );\n}\n\nLinearProgressWithLabel.propTypes = {\n    value: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n    },\n});\n\nexport default function LinearWithValueLabel({progressVal}) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <LinearProgressWithLabel value={progressVal} />\n        </div>\n    );\n}\n","import React, {useEffect, useState} from 'react';\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport WhiteWrapper from \"../components/wrapper/WhiteWrapper\";\nimport {useHistory, useParams} from \"react-router-dom\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {getSurveyForStudent, postSurveyAnswer} from \"../utils/survey-fetch-utils\";\nimport BasicButton from \"../components/BasicButton\";\nimport Slider from \"@material-ui/core/Slider\";\nimport LinearWithValueLabel from \"../components/ProgressBar\";\n\nconst useStyles = makeStyles({\n    center: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    qHeadline: {\n        fontSize: \"1.25em\",\n        textAlign: \"left\",\n        fontWeight: \"normal\"\n    },\n    q: {\n        fontSize: \"1.5em\",\n        textAlign: \"left\",\n        fontWeight: \"bold\"\n    }\n})\n\nexport const SurveyAnswer = () => {\n    const classes = useStyles();\n    const {id} = useParams();\n    //State for newSurvey Fetch\n    const [currentSurvey, setCurrentSurvey] = useState([]);\n    //State for Question Counter\n    const [questionState, setQuestionState] = useState(0)\n    //State for accumulating answerList of each singleQuestions\n    const [responseList, setResponseList] = useState([])\n    //State for Slider Value after submitting one single Questions\n    const [userResponse, setUserResponse] = useState(3)\n\n\n    useEffect(() => {\n        getSurveyForStudent(id).then(fetchResponse => {\n            if (!fetchResponse)\n            {routeNoSurvey()}\n            else\n                setCurrentSurvey(fetchResponse)\n        })\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n\n    const history = useHistory();\n    const routeThankYou = () => {\n        let path = `/thankyou`\n        history.push(path)\n    }\n\n    const routeNoSurvey = () => {\n        let path = `/nosurvey`\n        history.push(path)\n    }\n\n    //Post fetch Method\n    const postAnswer = async (collectedAnswers) => {\n        const b = await postSurveyAnswer(collectedAnswers);\n        console.log(b)\n    }\n\n\n    const nextQuestionButton = () => {\n        setResponseList([...responseList, {\n            questionText: currentSurvey.questionList[questionState].questionText,\n            keyWord: currentSurvey.questionList[questionState].keyWord,\n            response: userResponse,\n        }])\n\n        setUserResponse(3)\n        setQuestionState(questionState + 1)\n    }\n    //IMPORTANT ...responseList unwrap Schreibweise merken!!!\n    const finishButton = () => {\n        let finalResponseList = [...responseList, {\n            questionText: currentSurvey.questionList[questionState].questionText,\n            keyWord: currentSurvey.questionList[questionState].keyWord,\n            response: userResponse\n        }]\n        let finalObject = {\n            studentCode: id,\n            questionList: finalResponseList,\n        }\n        postAnswer(finalObject).then(routeThankYou)\n    }\n    const marks = [\n        {\n            value: 1,\n            label: '1',\n        },\n        {\n            value: 2,\n            label: '2',\n        },\n        {\n            value: 3,\n            label: '3',\n        },\n        {\n            value: 4,\n            label: '4',\n        },\n        {\n            value: 5,\n            label: '5'\n        }\n    ];\n\n    function valuetext(value) {\n        return `${value}`;\n    }\n\n    function valueLabelFormat(value) {\n        return marks.findIndex((mark) => mark.value === value) + 1;\n    }\n\n    const handleChange = (e, value) => {\n        setUserResponse(value);\n    };\n\n    console.log(currentSurvey)\n    return (\n        <Box className={classes.center} mt={4}>\n            <Box>\n\n\n            </Box>\n\n            <WhiteWrapper>\n                <Box mb={1} className={classes.qHeadline}>Question {questionState + 1}</Box>\n                {currentSurvey.questionList && <LinearWithValueLabel progressVal={questionState/currentSurvey.questionList.length*100}/>  }\n\n                {currentSurvey.questionList && <Typography\n                    className={classes.q}> {currentSurvey.questionList[questionState].questionText}</Typography>}\n                <Box my={5}>\n\n\n                    <Slider\n                        min={1}\n                        max={5}\n                        onChange={handleChange}\n                        value={userResponse}\n                        valueLabelFormat={valueLabelFormat}\n                        getAriaValueText={valuetext}\n                        aria-labelledby=\"discrete-slider-restrict\"\n                        step={null}\n                        valueLabelDisplay=\"auto\"\n                        marks={marks}\n                    />\n                    <Box style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                        <Typography id=\"discrete-slider-restrict\" gutterBottom>\n                            very low\n                        </Typography>\n                        <Typography id=\"discrete-slider-restrict\" gutterBottom>\n                            very high\n                        </Typography>\n                    </Box>\n                </Box>\n                {currentSurvey.questionList && questionState < currentSurvey.questionList.length - 1 ?\n                    <BasicButton className={classes.q} content={\"Next Question\"} onClick={nextQuestionButton}/> :\n                    <BasicButton className={classes.q} onClick={finishButton} content={\"Finish\"}/>}\n\n            </WhiteWrapper>\n        </Box>\n    )\n\n}","import Box from \"@material-ui/core/Box\";\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    backImg: {\n        background: `url(${\"./images/diagonal2.svg\"})`,\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundPosition: \"center\",\n        height: \"100%\",\n    },\n    newFont : {\n        fontFamily: \"'Open Sans', sans-serif;\",\n        fontWeight: \"800\"\n    },\n    wrapper: {\n        backgroundColor: \"#F7F7F7\",\n        width: \"300px\",\n        maxWidth: \"800px\",\n        borderRadius: \"10px\"\n    },\n}));\n\n\nexport default function DiagonalWrapper2 ({children, style}){\n\n    const classes = useStyles();\n\n\n    return (\n\n        <Box mt={4} p={3} style={style} boxShadow={2} className={classNames (classes.newFont, classes.wrapper, classes.backImg)}>\n\n            {children}\n        </Box>\n    )\n\n}","import React from 'react';\nimport makeStyles from \"@material-ui/styles/makeStyles/makeStyles\";\nimport {Box} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DiagonalWrapper2 from \"./wrapper/Diagonal2Wrapper\";\n\nconst useStyles = makeStyles({\n    center: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\"\n    }\n})\n\nexport default function ThankYou() {\n\n    const classes = useStyles();\n\n    return (\n\n        <Box className={classes.center}>\n            <DiagonalWrapper2 style={{fontSize: \"2em\"}}>\n\n                <Typography style={{fontSize: \"1.4em\", fontWeight: \"bold\"}}>See you soon!</Typography>\n                <Typography>Thank you for completing the survey</Typography>\n            </DiagonalWrapper2>\n            <Box mt={5}> <Typography style={{color: \"white\", fontSize: \"0.75em\"}}>You can close this window\n                now</Typography></Box>\n        </Box>\n\n    )\n}","import React from 'react';\nimport makeStyles from \"@material-ui/styles/makeStyles/makeStyles\";\nimport {Box} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DiagonalWrapper2 from \"./wrapper/Diagonal2Wrapper\";\n\nconst useStyles = makeStyles({\n    center: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\"\n    }\n})\n\nexport default function NoSurvey() {\n\n    const classes = useStyles();\n\n    return (\n\n        <Box className={classes.center} mt={6}>\n            <DiagonalWrapper2 style={{fontSize: \"2em\", padding:\"1.5em 0.5em\"}}>\n                <Typography style={{fontSize: \"1.4em\", fontWeight: \"bold\"}}>See you soon!</Typography>\n                <Typography>It looks like there's currently no survey for you</Typography>\n\n            </DiagonalWrapper2>\n            <Box mt={5}> <Typography style={{color: \"white\", fontSize: \"0.75em\"}}>You can close this window\n                now</Typography></Box>\n        </Box>\n\n\n    )\n}","import React, {useEffect} from 'react'\nimport {getDecodedJWTToken, isJWTTokenValid} from \"../utils/jwt-utils\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Login from \"../pages/Login\";\nimport Register from \"../pages/Register\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport Overview from \"../pages/Overview\";\nimport SchoolClassCreation from \"../pages/SchoolClassCreation\";\nimport SingleClass from \"../pages/SingleClass\";\nimport Landing from \"../pages/Landing\";\nimport {Box} from \"@material-ui/core\";\nimport SurveyCreation from \"../pages/SurveyCreation\";\nimport {SurveyAnswer} from \"../pages/SurveyAnswer\";\nimport ThankYou from \"./ThankYou\";\nimport NoSurvey from \"./NoSurvey\";\nimport {useDispatch} from \"react-redux\";\nimport {LOGIN_FAILED, LOGIN_SUCCESS} from \"../actions\";\n\n\nexport default function Navigation() {\n\n\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {           //Keep Login status after Refresh\n        if (isJWTTokenValid()) {\n            dispatch({type: LOGIN_SUCCESS, payload: getDecodedJWTToken()});\n        } else {\n            dispatch({type: LOGIN_FAILED})\n        }\n    }, [dispatch]);\n\n    return (\n        <Box>\n            <Router>\n                <Header/>\n\n                <Switch>\n                    <Route path=\"/login\" component={Login} exact/>\n                    <Route path=\"/register\" component={Register}/>\n                    <Route path=\"/answer/:id\" component={SurveyAnswer} exact/>\n                    <Route path=\"/thankyou\" component={ThankYou} exact/>\n                    <Route path=\"/nosurvey\" component={NoSurvey} exact/>\n                    <PrivateRoute path=\"/overview\" component={Overview} exact/>\n                    <PrivateRoute path=\"/creation\" component={SchoolClassCreation} exact/>\n                    <PrivateRoute path=\"/singleclass/:id\" component={SingleClass} exact/>\n                    <PrivateRoute path=\"/:id\" component={SurveyCreation} exact/>\n\n                    <Route path=\"/\">\n                        <Landing/>\n                    </Route>\n                </Switch>\n\n            </Router>\n        </Box>\n    )\n}\n","import React from 'react';\nimport './App.css';\nimport {createMuiTheme, MuiThemeProvider} from \"@material-ui/core\";\nimport Navigation from \"./components/Navigation\";\n\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: \"#272635\",\n        },\n        secondary: {\n            main: \"#F7F7F7\",\n        }\n    },\n    typography: {\n        fontFamily: ['Josefin Sans', 'sans-serif',].join(','),\n    },\n});\n\n\n\nfunction App() {\n\n    return (\n        <div className=\"App\">\n                <MuiThemeProvider theme={theme}>\n                    <Navigation/>\n                </MuiThemeProvider>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {LOGIN, LOGIN_FAILED, LOGIN_SUCCESS, LOGOUT} from \"../actions\";\n\nconst initialState = {\n    authStatus: 'PENDING',\n};\n\nexport default function UserReducer(state = initialState, action) {\n    switch (action.type) {\n        case LOGIN:\n            return {...state, authStatus: 'PENDING'};\n        case LOGIN_SUCCESS:\n            return {\n                ...state,\n                authStatus: 'SUCCESS',\n                userData: action.payload,\n            };\n        case LOGIN_FAILED:\n            return {...state, authStatus: 'FAILED' };\n        case LOGOUT:\n            return {};\n        default:\n            return state;\n    }\n}\n","import UserReducer from \"./UserReducer\";\nimport {combineReducers} from \"redux\";\n\n const allReducers = combineReducers({\n    loggedUser : UserReducer,\n})\n\nexport default allReducers","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux'\nimport allReducers from './reducers/index'\nimport { Provider } from 'react-redux'\n\nconst store = createStore(\n    allReducers,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\nReactDOM.render(\n    <Provider store={store}>\n    <App />,\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}